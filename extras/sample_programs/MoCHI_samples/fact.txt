Methods:
fact (n:Int , exn:(Int->Int)) :(Int) =
  if n
  then
    let (f:Int->Int) = fun (i:Int) :(Int) -> if i then exn i else 1 in
    n * (fact (n + -1,f))
  else exn 0;

Main:(Int):
let (n:Int) = 2 in
if n >= 1 then fact (n,(fun (x:Int) :(Int) -> fail))
else -1

(* points-to analysis would speed this up *)
