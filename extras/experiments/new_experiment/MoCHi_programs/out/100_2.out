/bin/sh: 1: no: not found
/bin/sh: 1: no: not found
/bin/sh: 1: no: not found
MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.35
  OCaml version: 4.03.0
  Command: bin/mochi.opt -limit 180 100_2.ml

parsed:
 let lock12_1199 st_1200 = assert (st_1200 = 0); 1 in
 let unlock12_1201 st_1202 = assert (st_1202 = 1); 0 in
 let f12_1203 n_1204 st_1205 = if n_1204 > 0 then lock12_1199 st_1205 else st_1205 in
 let g12_1206 n_1207 st_1208 = if n_1207 > 0 then unlock12_1201 st_1208 else st_1208 in
 let m12_1209 n_1210 = assert (g12_1206 n_1210 (f12_1203 n_1210 0) = 0) in
 let rec fact_1211 n_1212 exn_1213 =
   if n_1212 <= 0
   then
     exn_1213 0
   else
     let exn_1214 n_1215 = if n_1215 = 0 then 1 else exn_1213 n_1215 in
     n_1212 * fact_1211 (n_1212 - 1) exn_1214
 in
 let exn_1216 _ = assert false; 1 in
 let m2_1218 n_1219 = if n_1219 > 0 then let x_1220 = fact_1211 n_1219 exn_1216 in
                                       () in
 let f3_1221 n_1222 k_1223 = if n_1222 >= 0 then () else k_1223 0 in
 let g3_1224 n_1225 = assert (n_1225 = 0) in
 let m3_1226 n_1227 = f3_1221 n_1227 g3_1224 in
 let c4_1228 _ = () in
 let b4_1230 x_1231 _ = x_1231 1 in
 let a4_1233 x_2115 x_2119 q_1236 =
   if q_1236 = 0 then x_2115 0; x_2119 0 else assert false
 in
 let rec f_1237 n_1238 x_1239 q_1240 =
   if n_1238 <= 0
   then
     x_1239 q_1240
   else
     a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240
 in
 let s4_1241 n_1242 q_1243 = f_1237 n_1242 c4_1228 q_1243 in
 let m4_1244 n_1245 = s4_1241 n_1245 0 in
 let f5_1246 x_1247 g_1248 = g_1248 (x_1247 + 1) in
 let h5_1249 y_1250 = assert (y_1250 > 0) in
 let m5_1251 n_1252 = if n_1252 > 0 then f5_1246 n_1252 h5_1249 in
 let f6_1253 x_1254 g_1255 = g_1255 (x_1254 + 1) in
 let h6_1256 z_1257 y_1258 = assert (y_1258 > z_1257) in
 let m6_1259 n_1260 =
   if n_1260 >= 0 then f6_1253 n_1260 (h6_1256 n_1260)
 in
 let rec zip_1261 x_1262 y_1263 =
   if x_1262 = 0
   then
     if y_1263 = 0 then x_1262 else assert false
   else
     if y_1263 = 0
     then
       assert false
     else
       1 + zip_1261 (x_1262 - 1) (y_1263 - 1)
 in
 let rec map_1264 x_1265 =
   if x_1265 = 0
   then
     x_1265
   else
     1 + map_1264 (x_1265 - 1)
 in
 let m7_1266 n_1267 =
   assert (map_1264 (zip_1261 n_1267 n_1267) = n_1267)
 in
 let max_1268 max2_1269 x_2282 x_2284 x_2285 =
   max2_1269 (max2_1269 x_2282 x_2284) x_2285
 in
 let f9_1273 x_1274 y_1275 =
   if x_1274 >= y_1275 then x_1274 else y_1275
 in
 let m9_1276 x_2304 y_1278 z_1279 =
   let m_1280 =
     max_1268 f9_1273 x_2304 y_1278 z_1279
   in
   assert (f9_1273 x_2304 m_1280 = m_1280)
 in
 let rec mult_1281 n_1282 m_1283 =
   if n_1282 <= 0 || m_1283 <= 0
   then
     0
   else
     n_1282 + mult_1281 n_1282 (m_1283 - 1)
 in
 let m13_1284 n_1285 =
   assert (n_1285 <= mult_1281 n_1285 n_1285)
 in
 let main_1286 n_1287 m_1288 =
   if n_1287 = 12
   then
     m12_1209 m_1288
   else
     if n_1287 = 2
     then
       m2_1218 m_1288
     else
       if n_1287 = 3
       then
         m3_1226 m_1288
       else
         if n_1287 = 4
         then
           m4_1244 m_1288
         else
           if n_1287 = 5
           then
             m5_1251 m_1288
           else
             if n_1287 = 6
             then
               m6_1259 m_1288
             else
               if n_1287 = 7
               then
                 m7_1266 m_1288
               else
                 if n_1287 = 9
                 then
                   m9_1276 m_1288 m_1288 m_1288; ()
                 else
                   m13_1284 m_1288; ()
 in
 ()


###set_main:
 let lock12_1199 (st_1200:int) = assert (st_1200 = 0); 1 in
 let unlock12_1201 (st_1202:int) = assert (st_1202 = 1); 0 in
 let f12_1203 (n_1204:int) (st_1205:int) = if n_1204 > 0 then lock12_1199 st_1205 else st_1205 in
 let g12_1206 (n_1207:int) (st_1208:int) = if n_1207 > 0 then unlock12_1201 st_1208 else st_1208 in
 let m12_1209 (n_1210:int) = assert (g12_1206 n_1210 (f12_1203 n_1210 0) = 0) in
 let rec fact_1211 (n_1212:int) (exn_1213:(int -> int)) =
   if n_1212 <= 0
   then
     exn_1213 0
   else
     let exn_1214 (n_1215:int) = if n_1215 = 0 then 1 else exn_1213 n_1215 in
     n_1212 * fact_1211 (n_1212 - 1) exn_1214
 in
 let exn_1216 (_:!!!) = assert false; 1 in
 let m2_1218 (n_1219:int) = if n_1219 > 0 then let x_1220 = fact_1211 n_1219 exn_1216 in
                                             () in
 let f3_1221 (n_1222:int) (k_1223:(int -> unit)) = if n_1222 >= 0 then () else k_1223 0 in
 let g3_1224 (n_1225:int) = assert (n_1225 = 0) in
 let m3_1226 (n_1227:int) = f3_1221 n_1227 g3_1224 in
 let c4_1228 (_:int) = () in
 let b4_1230 (x_1231:(int -> unit)) (_:int) = x_1231 1 in
 let a4_1233 (x_2115:(int -> unit)) (x_2119:(int -> unit)) (q_1236:int) =
   if q_1236 = 0 then x_2115 0; x_2119 0 else assert false
 in
 let rec f_1237 (n_1238:int) (x_1239:(int -> unit)) (q_1240:int) =
   if n_1238 <= 0
   then
     x_1239 q_1240
   else
     a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240
 in
 let s4_1241 (n_1242:int) (q_1243:int) = f_1237 n_1242 c4_1228 q_1243 in
 let m4_1244 (n_1245:int) = s4_1241 n_1245 0 in
 let f5_1246 (x_1247:int) (g_1248:(int -> unit)) = g_1248 (x_1247 + 1) in
 let h5_1249 (y_1250:int) = assert (y_1250 > 0) in
 let m5_1251 (n_1252:int) = if n_1252 > 0 then f5_1246 n_1252 h5_1249 in
 let f6_1253 (x_1254:int) (g_1255:(int -> unit)) = g_1255 (x_1254 + 1) in
 let h6_1256 (z_1257:!!!) (y_1258:!!!) = assert (y_1258 > z_1257) in
 let m6_1259 (n_1260:int) =
   if n_1260 >= 0 then f6_1253 n_1260 (h6_1256 n_1260)
 in
 let rec zip_1261 (x_1262:int) (y_1263:int) =
   if x_1262 = 0
   then
     if y_1263 = 0 then x_1262 else assert false
   else
     if y_1263 = 0
     then
       assert false
     else
       1 + zip_1261 (x_1262 - 1) (y_1263 - 1)
 in
 let rec map_1264 (x_1265:int) =
   if x_1265 = 0
   then
     x_1265
   else
     1 + map_1264 (x_1265 - 1)
 in
 let m7_1266 (n_1267:int) =
   assert (map_1264 (zip_1261 n_1267 n_1267) = n_1267)
 in
 let max_1268 (max2_1269:(int -> int -> int)) (x_2282:int) 
             (x_2284:int) (x_2285:int) =
   max2_1269 (max2_1269 x_2282 x_2284) x_2285
 in
 let f9_1273 (x_1274:int) (y_1275:int) =
   if x_1274 >= y_1275 then x_1274 else y_1275
 in
 let m9_1276 (x_2304:int) (y_1278:int) (z_1279:int) =
   let m_1280 =
     max_1268 f9_1273 x_2304 y_1278 z_1279
   in
   assert (f9_1273 x_2304 m_1280 = m_1280)
 in
 let rec mult_1281 (n_1282:int) (m_1283:int) =
   if n_1282 <= 0 || m_1283 <= 0
   then
     0
   else
     n_1282 + mult_1281 n_1282 (m_1283 - 1)
 in
 let m13_1284 (n_1285:int) =
   assert (n_1285 <= mult_1281 n_1285 n_1285)
 in
 let main_1286 (n_1287:int) (m_1288:int) =
   if n_1287 = 12
   then
     m12_1209 m_1288
   else
     if n_1287 = 2
     then
       m2_1218 m_1288
     else
       if n_1287 = 3
       then
         m3_1226 m_1288
       else
         if n_1287 = 4
         then
           m4_1244 m_1288
         else
           if n_1287 = 5
           then
             m5_1251 m_1288
           else
             if n_1287 = 6
             then
               m6_1259 m_1288
             else
               if n_1287 = 7
               then
                 m7_1266 m_1288
               else
                 if n_1287 = 9
                 then
                   m9_1276 m_1288 m_1288 m_1288; ()
                 else
                   m13_1284 m_1288; ()
 in
 (let arg1_2376 = rand_int () in
  let arg2_2378 = rand_int () in
  main_1286 arg1_2376 arg2_2378);
 ()

###Copy_poly:
 let lock12_1199 (st_1200:int) = assert (st_1200 = 0); 1 in
 let unlock12_1201 (st_1202:int) = assert (st_1202 = 1); 0 in
 let f12_1203 (n_1204:int) (st_1205:int) = if n_1204 > 0 then lock12_1199 st_1205 else st_1205 in
 let g12_1206 (n_1207:int) (st_1208:int) = if n_1207 > 0 then unlock12_1201 st_1208 else st_1208 in
 let m12_1209 (n_1210:int) = assert (g12_1206 n_1210 (f12_1203 n_1210 0) = 0) in
 let rec fact_1211 (n_1212:int) (exn_1213:(int -> int)) =
   if n_1212 <= 0
   then
     exn_1213 0
   else
     let exn_1214 (n_1215:int) = if n_1215 = 0 then 1 else exn_1213 n_1215 in
     n_1212 * fact_1211 (n_1212 - 1) exn_1214
 in
 let exn_2382 (_:int) = assert false; 1 in
 let m2_1218 (n_1219:int) = if n_1219 > 0 then let x_1220 = fact_1211 n_1219 exn_2382 in
                                             () in
 let f3_1221 (n_1222:int) (k_1223:(int -> unit)) = if n_1222 >= 0 then () else k_1223 0 in
 let g3_1224 (n_1225:int) = assert (n_1225 = 0) in
 let m3_1226 (n_1227:int) = f3_1221 n_1227 g3_1224 in
 let c4_1228 (_:int) = () in
 let b4_1230 (x_1231:(int -> unit)) (_:int) = x_1231 1 in
 let a4_1233 (x_2115:(int -> unit)) (x_2119:(int -> unit)) (q_1236:int) =
   if q_1236 = 0 then x_2115 0; x_2119 0 else assert false
 in
 let rec f_1237 (n_1238:int) (x_1239:(int -> unit)) (q_1240:int) =
   if n_1238 <= 0
   then
     x_1239 q_1240
   else
     a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240
 in
 let s4_1241 (n_1242:int) (q_1243:int) = f_1237 n_1242 c4_1228 q_1243 in
 let m4_1244 (n_1245:int) = s4_1241 n_1245 0 in
 let f5_1246 (x_1247:int) (g_1248:(int -> unit)) = g_1248 (x_1247 + 1) in
 let h5_1249 (y_1250:int) = assert (y_1250 > 0) in
 let m5_1251 (n_1252:int) = if n_1252 > 0 then f5_1246 n_1252 h5_1249 in
 let f6_1253 (x_1254:int) (g_1255:(int -> unit)) = g_1255 (x_1254 + 1) in
 let h6_2381 (z_1257:int) (y_1258:int) = assert (y_1258 > z_1257) in
 let m6_1259 (n_1260:int) =
   if n_1260 >= 0 then f6_1253 n_1260 (h6_2381 n_1260)
 in
 let rec zip_1261 (x_1262:int) (y_1263:int) =
   if x_1262 = 0
   then
     if y_1263 = 0 then x_1262 else assert false
   else
     if y_1263 = 0
     then
       assert false
     else
       1 + zip_1261 (x_1262 - 1) (y_1263 - 1)
 in
 let rec map_1264 (x_1265:int) =
   if x_1265 = 0
   then
     x_1265
   else
     1 + map_1264 (x_1265 - 1)
 in
 let m7_1266 (n_1267:int) =
   assert (map_1264 (zip_1261 n_1267 n_1267) = n_1267)
 in
 let max_1268 (max2_1269:(int -> int -> int)) (x_2282:int) 
             (x_2284:int) (x_2285:int) =
   max2_1269 (max2_1269 x_2282 x_2284) x_2285
 in
 let f9_1273 (x_1274:int) (y_1275:int) =
   if x_1274 >= y_1275 then x_1274 else y_1275
 in
 let m9_1276 (x_2304:int) (y_1278:int) (z_1279:int) =
   let m_1280 =
     max_1268 f9_1273 x_2304 y_1278 z_1279
   in
   assert (f9_1273 x_2304 m_1280 = m_1280)
 in
 let rec mult_1281 (n_1282:int) (m_1283:int) =
   if n_1282 <= 0 || m_1283 <= 0
   then
     0
   else
     n_1282 + mult_1281 n_1282 (m_1283 - 1)
 in
 let m13_1284 (n_1285:int) =
   assert (n_1285 <= mult_1281 n_1285 n_1285)
 in
 let main_1286 (n_1287:int) (m_1288:int) =
   if n_1287 = 12
   then
     m12_1209 m_1288
   else
     if n_1287 = 2
     then
       m2_1218 m_1288
     else
       if n_1287 = 3
       then
         m3_1226 m_1288
       else
         if n_1287 = 4
         then
           m4_1244 m_1288
         else
           if n_1287 = 5
           then
             m5_1251 m_1288
           else
             if n_1287 = 6
             then
               m6_1259 m_1288
             else
               if n_1287 = 7
               then
                 m7_1266 m_1288
               else
                 if n_1287 = 9
                 then
                   m9_1276 m_1288 m_1288 m_1288; ()
                 else
                   m13_1284 m_1288; ()
 in
 (let arg1_2376 = rand_int () in
  let arg2_2378 = rand_int () in
  main_1286 arg1_2376 arg2_2378);
 ()

###Eliminate_redundant_arguments:
 let lock12_1199 (st_1200:int) = assert (st_1200 = 0); 1 in
 let unlock12_1201 (st_1202:int) = assert (st_1202 = 1); 0 in
 let f12_1203 (n_1204:int) (st_1205:int) = if n_1204 > 0 then lock12_1199 st_1205 else st_1205 in
 let g12_1206 (n_1207:int) (st_1208:int) = if n_1207 > 0 then unlock12_1201 st_1208 else st_1208 in
 let m12_1209 (n_1210:int) = assert (g12_1206 n_1210 (f12_1203 n_1210 0) = 0) in
 let rec fact_1211 (n_1212:int) (exn_1213:(int -> int)) =
   if n_1212 <= 0
   then
     exn_1213 0
   else
     let exn_1214 (n_1215:int) = if n_1215 = 0 then 1 else exn_1213 n_1215 in
     n_1212 * fact_1211 (n_1212 - 1) exn_1214
 in
 let exn_2382 (_:int) = assert false; 1 in
 let m2_1218 (n_1219:int) = if n_1219 > 0 then let x_1220 = fact_1211 n_1219 exn_2382 in
                                             () in
 let f3_1221 (n_1222:int) (k_1223:(int -> unit)) = if n_1222 >= 0 then () else k_1223 0 in
 let g3_1224 (n_1225:int) = assert (n_1225 = 0) in
 let m3_1226 (n_1227:int) = f3_1221 n_1227 g3_1224 in
 let c4_1228 (_:int) = () in
 let b4_1230 (x_1231:(int -> unit)) (_:int) = x_1231 1 in
 let a4_1233 (x_2115:(int -> unit)) (x_2119:(int -> unit)) (q_1236:int) =
   if q_1236 = 0 then x_2115 0; x_2119 0 else assert false
 in
 let rec f_1237 (n_1238:int) (x_1239:(int -> unit)) (q_1240:int) =
   if n_1238 <= 0
   then
     x_1239 q_1240
   else
     a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240
 in
 let s4_1241 (n_1242:int) (q_1243:int) = f_1237 n_1242 c4_1228 q_1243 in
 let m4_1244 (n_1245:int) = s4_1241 n_1245 0 in
 let f5_1246 (x_1247:int) (g_1248:(int -> unit)) = g_1248 (x_1247 + 1) in
 let h5_1249 (y_1250:int) = assert (y_1250 > 0) in
 let m5_1251 (n_1252:int) = if n_1252 > 0 then f5_1246 n_1252 h5_1249 in
 let f6_1253 (x_1254:int) (g_1255:(int -> unit)) = g_1255 (x_1254 + 1) in
 let h6_2381 (z_1257:int) (y_1258:int) = assert (y_1258 > z_1257) in
 let m6_1259 (n_1260:int) =
   if n_1260 >= 0 then f6_1253 n_1260 (h6_2381 n_1260)
 in
 let rec zip_1261 (x_1262:int) (y_1263:int) =
   if x_1262 = 0
   then
     if y_1263 = 0 then x_1262 else assert false
   else
     if y_1263 = 0
     then
       assert false
     else
       1 + zip_1261 (x_1262 - 1) (y_1263 - 1)
 in
 let rec map_1264 (x_1265:int) =
   if x_1265 = 0
   then
     x_1265
   else
     1 + map_1264 (x_1265 - 1)
 in
 let m7_1266 (n_1267:int) =
   assert (map_1264 (zip_1261 n_1267 n_1267) = n_1267)
 in
 let max_1268 (max2_1269:(int -> int -> int)) (x_2282:int) 
             (x_2284:int) (x_2285:int) =
   max2_1269 (max2_1269 x_2282 x_2284) x_2285
 in
 let f9_1273 (x_1274:int) (y_1275:int) =
   if x_1274 >= y_1275 then x_1274 else y_1275
 in
 let m9_1276 (x_2304:int) (y_1278:int) (z_1279:int) =
   let m_1280 =
     max_1268 f9_1273 x_2304 y_1278 z_1279
   in
   assert (f9_1273 x_2304 m_1280 = m_1280)
 in
 let rec mult_1281 (n_1282:int) (m_1283:int) =
   if n_1282 <= 0 || m_1283 <= 0
   then
     0
   else
     n_1282 + mult_1281 n_1282 (m_1283 - 1)
 in
 let m13_1284 (n_1285:int) =
   assert (n_1285 <= mult_1281 n_1285 n_1285)
 in
 let main_1286 (n_1287:int) (m_1288:int) =
   if n_1287 = 12
   then
     m12_1209 m_1288
   else
     if n_1287 = 2
     then
       m2_1218 m_1288
     else
       if n_1287 = 3
       then
         m3_1226 m_1288
       else
         if n_1287 = 4
         then
           m4_1244 m_1288
         else
           if n_1287 = 5
           then
             m5_1251 m_1288
           else
             if n_1287 = 6
             then
               m6_1259 m_1288
             else
               if n_1287 = 7
               then
                 m7_1266 m_1288
               else
                 if n_1287 = 9
                 then
                   m9_1276 m_1288 m_1288 m_1288; ()
                 else
                   m13_1284 m_1288; ()
 in
 (let arg1_2376 = rand_int () in
  let arg2_2378 = rand_int () in
  main_1286 arg1_2376 arg2_2378);
 ()

###CPS:
 (let lock12_1199 (st_1200:int) (k_lock12_3359:(int -> X)) =
    let u_2006 (k_lock12_u_3370:(unit -> X)) =
      if st_1200 = 0 then k_lock12_u_3370 () else <|fail|> () k_lock12_u_3370
    in
    u_2006 (fun (():unit) -> k_lock12_3359 1)
  in
  let unlock12_1201 (st_1202:int) (k_unlock12_3380:(int -> X)) =
    let u_2011 (k_unlock12_u_3391:(unit -> X)) =
      if st_1202 = 1 then k_unlock12_u_3391 () else <|fail|> () k_unlock12_u_3391
    in
    u_2011 (fun (():unit) -> k_unlock12_3380 0)
  in
  let f12_1203 (n_1204:int) (st_1205:int) (k_f12_3401:(int -> X)) =
    if n_1204 > 0 then lock12_1199 st_1205 k_f12_3401 else k_f12_3401 st_1205
  in
  let g12_1206 (n_1207:int) (st_1208:int) (k_g12_3423:(int -> X)) =
    if n_1207 > 0 then unlock12_1201 st_1208 k_g12_3423 else k_g12_3423 st_1208
  in
  let rec fact_1211 (n_1212:int) (exn_1213:(int -> (int -> X) -> X)) 
                   (k_fact_3492:(int -> X)) =
    if n_1212 <= 0
    then
      exn_1213 0 k_fact_3492
    else
      let exn_1214 (n_1215:int) (k_fact_exn_3506:(int -> X)) =
        if n_1215 = 0 then k_fact_exn_3506 1 else exn_1213 n_1215 k_fact_exn_3506
      in
      fact_1211
        (n_1212 - 1) exn_1214 
        (fun (x_3527:int) -> k_fact_3492 (n_1212 * x_3527))
  in
  let exn_2382 (_:int) (_:(int -> X)) = <|fail|> () (fun (():unit) -> _|_) in
  let m2_1218 (n_1219:int) (k_m2_3591:(unit -> X)) =
    if n_1219 > 0
    then
      fact_1211 n_1219 exn_2382 (fun (_:int) -> k_m2_3591 ())
    else
      k_m2_3591 ()
  in
  let f3_1221 (n_1222:int) (k_1223:(int -> (unit -> X) -> X)) 
             (k_f3_3631:(unit -> X)) =
    if n_1222 >= 0 then k_f3_3631 () else k_1223 0 k_f3_3631
  in
  let g3_1224 (n_1225:int) (k_g3_3656:(unit -> X)) =
    if n_1225 = 0 then k_g3_3656 () else <|fail|> () k_g3_3656
  in
  let c4_1228 (_:int) (k_c4_3704:(unit -> X)) = k_c4_3704 () in
  let b4_1230 (x_1231:(int -> (unit -> X) -> X)) (_:int) 
             (k_b4_3714:(unit -> X)) = x_1231 1 k_b4_3714
  in
  let a4_1233 (x_2115:(int -> (unit -> X) -> X)) 
             (x_2119:(int -> (unit -> X) -> X)) (q_1236:int) 
             (k_a4_3741:(unit -> X)) =
    if q_1236 = 0
    then
      x_2115 0 (fun (():unit) -> x_2119 0 k_a4_3741)
    else
      <|fail|> () (fun (():unit) -> _|_)
  in
  let rec f_1237 (n_1238:int) 
                (x_1239:(int -> (unit -> X) -> X)) (q_1240:int) 
                (k_f_3798:(unit -> X)) =
    if n_1238 <= 0
    then
      x_1239 q_1240 k_f_3798
    else
      a4_1233
        x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 
        k_f_3798
  in
  let h5_1249 (y_1250:int) (k_h5_3931:(unit -> X)) =
    if y_1250 > 0
    then
      k_h5_3931 ()
    else
      <|fail|> () k_h5_3931
  in
  let m5_1251 (n_1252:int) (k_m5_3949:(unit -> X)) =
    if n_1252 > 0
    then
      h5_1249 (n_1252 + 1) k_m5_3949
    else
      k_m5_3949 ()
  in
  let h6_2381 (z_1257:int) (y_1258:int) (k_h6_4007:(unit -> X)) =
    if y_1258 > z_1257
    then
      k_h6_4007 ()
    else
      <|fail|> () k_h6_4007
  in
  let m6_1259 (n_1260:int) (k_m6_4026:(unit -> X)) =
    if n_1260 >= 0
    then
      (h6_2381 n_1260) (n_1260 + 1) k_m6_4026
    else
      k_m6_4026 ()
  in
  let rec zip_1261 (x_1262:int) (y_1263:int) 
                  (k_zip_4061:(int -> X)) =
    if x_1262 = 0
    then
      if y_1263 = 0
      then
        k_zip_4061 x_1262
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1263 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip_1261
          (x_1262 - 1) (y_1263 - 1) 
          (fun (x_4093:int) -> k_zip_4061 (1 + x_4093))
  in
  let rec map_1264 (x_1265:int) (k_map_4120:(int -> X)) =
    if x_1265 = 0
    then
      k_map_4120 x_1265
    else
      map_1264
        (x_1265 - 1) 
        (fun (x_4124:int) -> k_map_4120 (1 + x_4124))
  in
  let f9_1273 (x_1274:int) (y_1275:int) (k_f9_4239:(int -> X)) =
    if x_1274 >= y_1275
    then
      k_f9_4239 x_1274
    else
      k_f9_4239 y_1275
  in
  let rec mult_1281 (n_1282:int) (m_1283:int) 
                   (k_mult_4310:(int -> X)) =
    if n_1282 <= 0 || m_1283 <= 0
    then
      k_mult_4310 0
    else
      mult_1281
        n_1282 (m_1283 - 1) 
        (fun (x_4314:int) -> k_mult_4310 (n_1282 + x_4314))
  in
  let main_1286 (n_1287:int) (m_1288:int) 
               (k_main_4370:(unit -> X)) =
    if n_1287 = 12
    then
      f12_1203
        m_1288 0 
        (fun (x_3471:int) ->
           g12_1206
             m_1288 x_3471 
             (fun (x_3448:int) ->
                if x_3448 = 0
                then
                  k_main_4370 ()
                else
                  <|fail|> () k_main_4370))
    else
      if n_1287 = 2
      then
        m2_1218 m_1288 k_main_4370
      else
        if n_1287 = 3
        then
          f3_1221 m_1288 g3_1224 k_main_4370
        else
          if n_1287 = 4
          then
            f_1237 m_1288 c4_1228 0 k_main_4370
          else
            if n_1287 = 5
            then
              m5_1251 m_1288 k_main_4370
            else
              if n_1287 = 6
              then
                m6_1259 m_1288 k_main_4370
              else
                if n_1287 = 7
                then
                  zip_1261
                    m_1288 m_1288 
                    (fun (x_4170:int) ->
                       map_1264
                         x_4170 
                         (fun (x_4148:int) ->
                            if x_4148 = m_1288
                            then
                              k_main_4370 ()
                            else
                              <|fail|> () k_main_4370))
                else
                  if n_1287 = 9
                  then
                    f9_1273
                      m_1288 m_1288 
                      (fun (x_4218:int) ->
                         f9_1273
                           x_4218 m_1288 
                           (fun (m_4301:int) ->
                              f9_1273
                                m_1288 m_4301 
                                (fun (x_4277:int) ->
                                   if x_4277 = m_4301
                                   then
                                     (fun (():unit) ->
                                        k_main_4370 ()) ()
                                   else
                                     <|fail|>
                                       () 
                                       (fun (():unit) ->
                                          k_main_4370 ()))))
                  else
                    mult_1281
                      m_1288 m_1288 
                      (fun (x_4341:int) ->
                         if m_1288 <= x_4341
                         then
                           (fun (():unit) -> k_main_4370 ()) ()
                         else
                           <|fail|>
                             () 
                             (fun (():unit) -> k_main_4370 ()))
  in
  let main_2380 (k_main_4508:(unit -> X)) =
    let arg1_2376 (k_main_arg1_4513:(int -> X)) =
      rand_int_cps () k_main_arg1_4513
    in
    arg1_2376
      (fun (arg1_4543:int) ->
         let arg2_2378 (k_main_arg2_4525:(int -> X)) =
           rand_int_cps () k_main_arg2_4525
         in
         arg2_2378
           (fun (arg2_4542:int) ->
              main_1286 arg1_4543 arg2_4542 k_main_4508))
  in
  main_2380 (fun (():unit) -> {end}) # [ACPS])

###Remove_pair:
 (let lock12_1199 (st_1200:int) (k_lock12_3359:(int -> X)) =
    let u_2006 (k_lock12_u_3370:(unit -> X)) =
      if st_1200 = 0 then k_lock12_u_3370 () else <|fail|> () k_lock12_u_3370
    in
    u_2006 (fun (():unit) -> k_lock12_3359 1)
  in
  let unlock12_1201 (st_1202:int) (k_unlock12_3380:(int -> X)) =
    let u_2011 (k_unlock12_u_3391:(unit -> X)) =
      if st_1202 = 1 then k_unlock12_u_3391 () else <|fail|> () k_unlock12_u_3391
    in
    u_2011 (fun (():unit) -> k_unlock12_3380 0)
  in
  let f12_1203 (n_1204:int) (st_1205:int) (k_f12_3401:(int -> X)) =
    if n_1204 > 0 then lock12_1199 st_1205 k_f12_3401 else k_f12_3401 st_1205
  in
  let g12_1206 (n_1207:int) (st_1208:int) (k_g12_3423:(int -> X)) =
    if n_1207 > 0 then unlock12_1201 st_1208 k_g12_3423 else k_g12_3423 st_1208
  in
  let rec fact_1211 (n_1212:int) (exn_1213:(int -> (int -> X) -> X)) 
                   (k_fact_3492:(int -> X)) =
    if n_1212 <= 0
    then
      exn_1213 0 k_fact_3492
    else
      let exn_1214 (n_1215:int) (k_fact_exn_3506:(int -> X)) =
        if n_1215 = 0 then k_fact_exn_3506 1 else exn_1213 n_1215 k_fact_exn_3506
      in
      fact_1211
        (n_1212 - 1) exn_1214 
        (fun (x_3527:int) -> k_fact_3492 (n_1212 * x_3527))
  in
  let exn_2382 (_:int) (_:(int -> X)) = <|fail|> () (fun (():unit) -> _|_) in
  let m2_1218 (n_1219:int) (k_m2_3591:(unit -> X)) =
    if n_1219 > 0
    then
      fact_1211 n_1219 exn_2382 (fun (_:int) -> k_m2_3591 ())
    else
      k_m2_3591 ()
  in
  let f3_1221 (n_1222:int) (k_1223:(int -> (unit -> X) -> X)) 
             (k_f3_3631:(unit -> X)) =
    if n_1222 >= 0 then k_f3_3631 () else k_1223 0 k_f3_3631
  in
  let g3_1224 (n_1225:int) (k_g3_3656:(unit -> X)) =
    if n_1225 = 0 then k_g3_3656 () else <|fail|> () k_g3_3656
  in
  let c4_1228 (_:int) (k_c4_3704:(unit -> X)) = k_c4_3704 () in
  let b4_1230 (x_1231:(int -> (unit -> X) -> X)) (_:int) 
             (k_b4_3714:(unit -> X)) = x_1231 1 k_b4_3714
  in
  let a4_1233 (x_2115:(int -> (unit -> X) -> X)) 
             (x_2119:(int -> (unit -> X) -> X)) (q_1236:int) 
             (k_a4_3741:(unit -> X)) =
    if q_1236 = 0
    then
      x_2115 0 (fun (():unit) -> x_2119 0 k_a4_3741)
    else
      <|fail|> () (fun (():unit) -> _|_)
  in
  let rec f_1237 (n_1238:int) 
                (x_1239:(int -> (unit -> X) -> X)) (q_1240:int) 
                (k_f_3798:(unit -> X)) =
    if n_1238 <= 0
    then
      x_1239 q_1240 k_f_3798
    else
      a4_1233
        x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 
        k_f_3798
  in
  let h5_1249 (y_1250:int) (k_h5_3931:(unit -> X)) =
    if y_1250 > 0
    then
      k_h5_3931 ()
    else
      <|fail|> () k_h5_3931
  in
  let m5_1251 (n_1252:int) (k_m5_3949:(unit -> X)) =
    if n_1252 > 0
    then
      h5_1249 (n_1252 + 1) k_m5_3949
    else
      k_m5_3949 ()
  in
  let h6_2381 (z_1257:int) (y_1258:int) (k_h6_4007:(unit -> X)) =
    if y_1258 > z_1257
    then
      k_h6_4007 ()
    else
      <|fail|> () k_h6_4007
  in
  let m6_1259 (n_1260:int) (k_m6_4026:(unit -> X)) =
    if n_1260 >= 0
    then
      h6_2381 n_1260 (n_1260 + 1) k_m6_4026
    else
      k_m6_4026 ()
  in
  let rec zip_1261 (x_1262:int) (y_1263:int) 
                  (k_zip_4061:(int -> X)) =
    if x_1262 = 0
    then
      if y_1263 = 0
      then
        k_zip_4061 x_1262
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1263 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip_1261
          (x_1262 - 1) (y_1263 - 1) 
          (fun (x_4093:int) -> k_zip_4061 (1 + x_4093))
  in
  let rec map_1264 (x_1265:int) (k_map_4120:(int -> X)) =
    if x_1265 = 0
    then
      k_map_4120 x_1265
    else
      map_1264
        (x_1265 - 1) 
        (fun (x_4124:int) -> k_map_4120 (1 + x_4124))
  in
  let f9_1273 (x_1274:int) (y_1275:int) (k_f9_4239:(int -> X)) =
    if x_1274 >= y_1275
    then
      k_f9_4239 x_1274
    else
      k_f9_4239 y_1275
  in
  let rec mult_1281 (n_1282:int) (m_1283:int) 
                   (k_mult_4310:(int -> X)) =
    if n_1282 <= 0 || m_1283 <= 0
    then
      k_mult_4310 0
    else
      mult_1281
        n_1282 (m_1283 - 1) 
        (fun (x_4314:int) -> k_mult_4310 (n_1282 + x_4314))
  in
  let main_1286 (n_1287:int) (m_1288:int) 
               (k_main_4370:(unit -> X)) =
    if n_1287 = 12
    then
      f12_1203
        m_1288 0 
        (fun (x_3471:int) ->
           g12_1206
             m_1288 x_3471 
             (fun (x_3448:int) ->
                if x_3448 = 0
                then
                  k_main_4370 ()
                else
                  <|fail|> () k_main_4370))
    else
      if n_1287 = 2
      then
        m2_1218 m_1288 k_main_4370
      else
        if n_1287 = 3
        then
          f3_1221 m_1288 g3_1224 k_main_4370
        else
          if n_1287 = 4
          then
            f_1237 m_1288 c4_1228 0 k_main_4370
          else
            if n_1287 = 5
            then
              m5_1251 m_1288 k_main_4370
            else
              if n_1287 = 6
              then
                m6_1259 m_1288 k_main_4370
              else
                if n_1287 = 7
                then
                  zip_1261
                    m_1288 m_1288 
                    (fun (x_4170:int) ->
                       map_1264
                         x_4170 
                         (fun (x_4148:int) ->
                            if x_4148 = m_1288
                            then
                              k_main_4370 ()
                            else
                              <|fail|> () k_main_4370))
                else
                  if n_1287 = 9
                  then
                    f9_1273
                      m_1288 m_1288 
                      (fun (x_4218:int) ->
                         f9_1273
                           x_4218 m_1288 
                           (fun (m_4301:int) ->
                              f9_1273
                                m_1288 m_4301 
                                (fun (x_4277:int) ->
                                   if x_4277 = m_4301
                                   then
                                     k_main_4370 ()
                                   else
                                     <|fail|>
                                       () 
                                       (fun (():unit) ->
                                          k_main_4370 ()))))
                  else
                    mult_1281
                      m_1288 m_1288 
                      (fun (x_4341:int) ->
                         if m_1288 <= x_4341
                         then
                           k_main_4370 ()
                         else
                           <|fail|>
                             () 
                             (fun (():unit) -> k_main_4370 ()))
  in
  let main_2380 (k_main_4508:(unit -> X)) =
    let arg1_2376 (k_main_arg1_4513:(int -> X)) =
      rand_int_cps () k_main_arg1_4513
    in
    arg1_2376
      (fun (arg1_4543:int) ->
         let arg2_2378 (k_main_arg2_4525:(int -> X)) =
           rand_int_cps () k_main_arg2_4525
         in
         arg2_2378
           (fun (arg2_4542:int) ->
              main_1286 arg1_4543 arg2_4542 k_main_4508))
  in
  main_2380 (fun (():unit) -> {end}) # [ACPS])


Program with abstraction types (CEGAR-cycle 1)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> int -> (unit -> X) -> X)
  fact_1211 : (int -> (int -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (int -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (int -> int -> (int -> X) -> X)

(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [1/2] ... --> 
  m2_1218 [1/2] ... --> 
  fact_1211 [2/2] ... --> 
  fact_1211 [1/2] ... --> 
  exn_1214 [2/2] ... --> 
  exn_2382 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 1; 0

(1-3) Checking counterexample ... DONE!

(1-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> int -> (unit -> X) -> X)
  fact_1211 : (int -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (int -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (int -> int -> (int -> X) -> X)

(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [1/2] ... --> 
  m2_1218 [1/2] ... --> 
  fact_1211 [1/2] ... --> 
  exn_2382 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0

(2-3) Checking counterexample ... DONE!

(2-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> int -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (int -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (int -> int -> (int -> X) -> X)

(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [1/2] ... --> 
  f_1237 [2/2] ... --> 
  a4_1233 [2/2] ... --> 
  fail_5817 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 1; 1; 0

(3-3) Checking counterexample ... DONE!

(3-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 1; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (int -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (int -> int -> (int -> X) -> X)

(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [1/2] ... --> 
  fail_5821 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 0; 0

(4-3) Checking counterexample ... DONE!

(4-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 0

Program with abstraction types (CEGAR-cycle 5)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (int -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (x_2:int -> x_3:int[x_3 = x_2] -> (int -> X) -> X)

(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_main_5785 ... --> 
  map_1264 [1/2] ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

(5-3) Checking counterexample ... DONE!

(5-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 6)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (x_4:int[x_4 = 0] -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (x_2:int -> x_3:int[x_3 = x_2] -> (int[x_3 = 0] -> X) -> X)

(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 1; 0; 0; 1; 0

(6-3) Checking counterexample ... DONE!

(6-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 1; 0; 0; 1

Program with abstraction types (CEGAR-cycle 7)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (int -> (x_4:int[1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (x_2:int -> x_3:int[x_3 = x_2] -> (int[1 = x_3; x_3 = 0] -> X) -> X)

(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [1/2] ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 0; 1; 0

(7-3) Checking counterexample ... DONE!

(7-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 8)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[1 <= x_2] -> (x_4:int[1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (x_2:int -> x_3:int[x_3 = x_2] -> (x_5:int[x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) -> X)

(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1; 0

(8-3) Checking counterexample ... DONE!

(8-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 0; 0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 9)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[x_2 = 0; 1 = x_2; 1 <= x_2] -> (x_4:int[1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (int -> int -> (int -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] -> (x_5:int[x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) -> X)

(9-1) Abstracting ... DONE!

(9-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [2/2] ... --> 
  br_main_5800 [2/2] ... --> 
  mult_1281 [1/2] ... --> 
  f_main_5791 [2/2] ... --> 
  fail_5825 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 1; 0

(9-3) Checking counterexample ... DONE!

(9-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 1

Program with abstraction types (CEGAR-cycle 10)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[x_2 = 0; 1 = x_2; 1 <= x_2] -> (x_4:int[1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] -> (x_5:int[x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) -> X)

(10-1) Abstracting ... DONE!

(10-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0; 0; 1; 0

(10-3) Checking counterexample ... DONE!

(10-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 11)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] -> (x_4:int[1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] -> (x_5:int[2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) ->
              X)

(11-1) Abstracting ... DONE!

(11-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0

(11-3) Checking counterexample ... DONE!

(11-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 12)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] -> (x_4:int[2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[2 = x_3; 2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) -> X)

(12-1) Abstracting ... DONE!

(12-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1; 0

(12-3) Checking counterexample ... DONE!

(12-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 1; 1

Program with abstraction types (CEGAR-cycle 13)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] -> (x_4:int[2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[2 = x_5; 2 = x_3; 2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] -> X) -> X)

(13-1) Abstracting ... DONE!

(13-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0

(13-3) Checking counterexample ... DONE!

(13-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 0

Program with abstraction types (CEGAR-cycle 14)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[3 <= x_5; 2 = x_5; 2 = x_3; 2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] ->
              X) -> X)

(14-1) Abstracting ... DONE!

(14-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1; 0

(14-3) Checking counterexample ... DONE!

(14-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 15)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[3 = x_3; 3 <= x_5; 2 = x_5; 2 = x_3; 2 <= x_5; 
                       x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; 
                       x_3 = 0] ->
              X) -> X)

(15-1) Abstracting ... DONE!

(15-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

(15-3) Checking counterexample ... DONE!

(15-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1

Program with abstraction types (CEGAR-cycle 16)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[3 = x_5; 3 = x_3; 3 <= x_5; 2 = x_5; 2 = x_3; 
                       2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 
                       1 = x_3; x_3 = 0] ->
              X) -> X)

(16-1) Abstracting ... DONE!

(16-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1; 0

(16-3) Checking counterexample ... DONE!

(16-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0

Program with abstraction types (CEGAR-cycle 17)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[4 <= x_2; 3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[4 <= x_5; 3 = x_5; 3 = x_3; 3 <= x_5; 2 = x_5; 
                       2 = x_3; 2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 
                       1 <= x_5; 1 = x_3; x_3 = 0] ->
              X) -> X)

(17-1) Abstracting ... DONE!

(17-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

(17-3) Checking counterexample ... DONE!

(17-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 18)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[4 <= x_2; 3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[4 = x_4; 3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[4 = x_3; 4 <= x_5; 3 = x_5; 3 = x_3; 3 <= x_5; 
                       2 = x_5; 2 = x_3; 2 <= x_5; x_5 = 0; 1 = x_5; 
                       x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] ->
              X) -> X)

(18-1) Abstracting ... DONE!

(18-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 
  0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 0

(18-3) Checking counterexample ... DONE!

(18-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1

Program with abstraction types (CEGAR-cycle 19)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[4 = x_2; 4 <= x_2; 3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[4 = x_4; 3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[4 = x_5; 4 = x_3; 4 <= x_5; 3 = x_5; 3 = x_3; 
                       3 <= x_5; 2 = x_5; 2 = x_3; 2 <= x_5; x_5 = 0; 
                       1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; x_3 = 0] ->
              X) -> X)

(19-1) Abstracting ... DONE!

(19-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 
  0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

(19-3) Checking counterexample ... DONE!

(19-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 0

Program with abstraction types (CEGAR-cycle 20)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[5 <= x_2; 4 = x_2; 4 <= x_2; 3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[4 = x_4; 3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[5 <= x_5; 4 = x_5; 4 = x_3; 4 <= x_5; 3 = x_5; 
                       3 = x_3; 3 <= x_5; 2 = x_5; 2 = x_3; 2 <= x_5; 
                       x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 1 = x_3; 
                       x_3 = 0] ->
              X) -> X)

(20-1) Abstracting ... DONE!

(20-2) Checking HORS ... DONE!

Error trace::
  main_5770 ... --> 
  main_2380 ... --> 
  arg1_2376 ... --> 
  f_main_5793 ... --> 
  arg2_2378 ... --> 
  f_f_main_5794 ... --> 
  main_1286 [2/2] ... --> 
  br_main_5812 [2/2] ... --> 
  br_main_5810 [2/2] ... --> 
  br_main_5808 [2/2] ... --> 
  br_main_5806 [2/2] ... --> 
  br_main_5804 [2/2] ... --> 
  br_main_5802 [1/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [2/2] ... --> 
  br_zip_5798 [2/2] ... --> 
  zip_1261 [1/2] ... --> 
  br_zip_5796 [1/2] ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_zip_5780 ... --> 
  f_main_5785 ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [2/2] ... --> 
  map_1264 [1/2] ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_map_5781 ... --> 
  f_f_main_5786 [2/2] ... --> 
  fail_5823 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 
  0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1; 0

(20-3) Checking counterexample ... DONE!

(20-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 
0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 21)::
Main: main_5770
  main_5770 -> (main_2380 f_5795).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (q_1236 = 0) -> (x_2115 0 (f_a4_5776 q_1236 k_a4_3741 x_2119)).
  a4_1233 x_2115 x_2119 q_1236 k_a4_3741 when (not (q_1236 = 0)) -> (fail_5817 true (f_a4_5777 q_1236)).
  arg1_2376 k_main_arg1_4513 -> (rand_int k_main_arg1_4513).
  arg2_2378 arg1_4543 k_main_arg2_4525 -> (rand_int k_main_arg2_4525).
  b4_1230 x_1231 x_2103 k_b4_3714 -> (x_1231 1 k_b4_3714).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when b_5801 ->
      (f9_1273 m_1288 m_1288 (f_main_5787 m_1288 n_1287 k_main_4370)).
  br_main_5800 b_5801 n_1287 m_1288 k_main_4370 when (not b_5801) ->
      (mult_1281 m_1288 m_1288 (f_main_5791 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when b_5803 ->
      (zip_1261 m_1288 m_1288 (f_main_5785 m_1288 n_1287 k_main_4370)).
  br_main_5802 b_5803 n_1287 m_1288 k_main_4370 when (not b_5803) ->
      (br_main_5800 (n_1287 = 9) n_1287 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when b_5805 -> (m6_1259 m_1288 k_main_4370).
  br_main_5804 b_5805 n_1287 m_1288 k_main_4370 when (not b_5805) ->
      (br_main_5802 (n_1287 = 7) n_1287 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when b_5807 -> (m5_1251 m_1288 k_main_4370).
  br_main_5806 b_5807 n_1287 m_1288 k_main_4370 when (not b_5807) ->
      (br_main_5804 (n_1287 = 6) n_1287 m_1288 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when b_5809 -> (f_1237 m_1288 c4_1228 0 k_main_4370).
  br_main_5808 b_5809 n_1287 m_1288 k_main_4370 when (not b_5809) ->
      (br_main_5806 (n_1287 = 5) n_1287 m_1288 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when b_5811 -> (f3_1221 m_1288 g3_1224 k_main_4370).
  br_main_5810 b_5811 n_1287 m_1288 k_main_4370 when (not b_5811) ->
      (br_main_5808 (n_1287 = 4) n_1287 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when b_5813 -> (m2_1218 m_1288 k_main_4370).
  br_main_5812 b_5813 n_1287 m_1288 k_main_4370 when (not b_5813) ->
      (br_main_5810 (n_1287 = 3) n_1287 m_1288 k_main_4370).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when b_5797 -> (k_zip_4061 x_1262).
  br_zip_5796 b_5797 x_1262 y_1263 k_zip_4061 when (not b_5797) -> (fail_5820 true (f_zip_5778 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when b_5799 -> (fail_5821 true (f_zip_5779 x_1262 y_1263)).
  br_zip_5798 b_5799 x_1262 y_1263 k_zip_4061 when (not b_5799) ->
      (zip_1261 (x_1262 - 1) (y_1263 - 1) (f_zip_5780 x_1262 y_1263 k_zip_4061)).
  c4_1228 x_2096 k_c4_3704 -> (k_c4_3704 ()).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (n_1215 = 0) -> (k_fact_exn_3506 1).
  exn_1214 n_1212 exn_1213 n_1215 k_fact_exn_3506 when (not (n_1215 = 0)) -> (exn_1213 n_1215 k_fact_exn_3506).
  exn_2382 n_1217 k_exn_3569 -> {fail} => (f_exn_5774 n_1217 ()).
  f12_1203 n_1204 st_1205 k_f12_3401 when (n_1204 > 0) -> (lock12_1199 st_1205 k_f12_3401).
  f12_1203 n_1204 st_1205 k_f12_3401 when (not (n_1204 > 0)) -> (k_f12_3401 st_1205).
  f3_1221 n_1222 k_1223 k_f3_3631 when (n_1222 >= 0) -> (k_f3_3631 ()).
  f3_1221 n_1222 k_1223 k_f3_3631 when (not (n_1222 >= 0)) -> (k_1223 0 k_f3_3631).
  f9_1273 x_1274 y_1275 k_f9_4239 when (x_1274 >= y_1275) -> (k_f9_4239 x_1274).
  f9_1273 x_1274 y_1275 k_f9_4239 when (not (x_1274 >= y_1275)) -> (k_f9_4239 y_1275).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (n_1238 <= 0) -> (x_1239 q_1240 k_f_3798).
  f_1237 n_1238 x_1239 q_1240 k_f_3798 when (not (n_1238 <= 0)) ->
      (a4_1233 x_1239 (f_1237 (n_1238 - 1) (b4_1230 x_1239)) q_1240 k_f_3798).
  f_5795 main_4544 -> end.
  f_a4_5776 q_1236 k_a4_3741 x_2119 u_3764 -> (x_2119 0 k_a4_3741).
  f_a4_5777 q_1236 u_3776 -> _|_.
  f_exn_5774 n_1217 u_3583 -> _|_.
  f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370 u_5309 -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when (x_4277 = m_4301) -> (k_main_4370 ()).
  f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370 x_4277 when 
      (not (x_4277 = m_4301)) -> (fail_5824 true (f_f_f_f_main_5790 m_1288 m_4301 n_1287 x_4218 x_4277 k_main_4370)).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (x_3448 = 0) -> (k_main_4370 ()).
  f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370 x_3448 when (not (x_3448 = 0)) -> (fail_5822 true k_main_4370).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (x_4148 = m_1288) -> (k_main_4370 ()).
  f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370 x_4148 when (not (x_4148 = m_1288)) -> (fail_5823 true k_main_4370).
  f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370 m_4301 ->
      (f9_1273 m_1288 m_4301 (f_f_f_main_5789 m_1288 m_4301 n_1287 x_4218 k_main_4370)).
  f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370 x_5307 -> (k_main_4370 ()).
  f_f_main_5794 arg1_4543 k_main_4508 arg2_4542 -> (main_1286 arg1_4543 arg2_4542 k_main_4508).
  f_fact_5773 n_1212 k_fact_3492 x_3527 -> (k_fact_3492 (n_1212 * x_3527)).
  f_lock12_5771 st_1200 k_lock12_3359 u_3373 -> (k_lock12_3359 1).
  f_m2_5775 n_1219 k_m2_3591 x_3617 -> (k_m2_3591 ()).
  f_main_5783 m_1288 n_1287 k_main_4370 x_3471 ->
      (g12_1206 m_1288 x_3471 (f_f_main_5784 m_1288 n_1287 x_3471 k_main_4370)).
  f_main_5785 m_1288 n_1287 k_main_4370 x_4170 -> (map_1264 x_4170 (f_f_main_5786 m_1288 n_1287 x_4170 k_main_4370)).
  f_main_5787 m_1288 n_1287 k_main_4370 x_4218 ->
      (f9_1273 x_4218 m_1288 (f_f_main_5788 m_1288 n_1287 x_4218 k_main_4370)).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (m_1288 <= x_4341) -> (k_main_4370 ()).
  f_main_5791 m_1288 n_1287 k_main_4370 x_4341 when (not (m_1288 <= x_4341)) ->
      (fail_5825 true (f_f_main_5792 m_1288 n_1287 x_4341 k_main_4370)).
  f_main_5793 k_main_4508 arg1_4543 -> (arg2_2378 arg1_4543 (f_f_main_5794 arg1_4543 k_main_4508)).
  f_map_5781 x_1265 k_map_4120 x_4124 -> (k_map_4120 (1 + x_4124)).
  f_mult_5782 m_1283 n_1282 k_mult_4310 x_4314 -> (k_mult_4310 (n_1282 + x_4314)).
  f_unlock12_5772 st_1202 k_unlock12_3380 u_3394 -> (k_unlock12_3380 0).
  f_zip_5778 x_1262 y_1263 u_4073 -> _|_.
  f_zip_5779 x_1262 y_1263 u_4089 -> _|_.
  f_zip_5780 x_1262 y_1263 k_zip_4061 x_4093 -> (k_zip_4061 (1 + x_4093)).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (n_1212 <= 0) -> (exn_1213 0 k_fact_3492).
  fact_1211 n_1212 exn_1213 k_fact_3492 when (not (n_1212 <= 0)) ->
      (fact_1211 (n_1212 - 1) (exn_1214 n_1212 exn_1213) (f_fact_5773 n_1212 k_fact_3492)).
  fail_5814 b k -> {fail} => (k ()).
  fail_5815 b k -> {fail} => (k ()).
  fail_5816 b k -> {fail} => (k ()).
  fail_5817 b k -> {fail} => (k ()).
  fail_5818 b k -> {fail} => (k ()).
  fail_5819 b k -> {fail} => (k ()).
  fail_5820 b k -> {fail} => (k ()).
  fail_5821 b k -> {fail} => (k ()).
  fail_5822 b k -> {fail} => (k ()).
  fail_5823 b k -> {fail} => (k ()).
  fail_5824 b k -> {fail} => (k ()).
  fail_5825 b k -> {fail} => (k ()).
  g12_1206 n_1207 st_1208 k_g12_3423 when (n_1207 > 0) -> (unlock12_1201 st_1208 k_g12_3423).
  g12_1206 n_1207 st_1208 k_g12_3423 when (not (n_1207 > 0)) -> (k_g12_3423 st_1208).
  g3_1224 n_1225 k_g3_3656 when (n_1225 = 0) -> (k_g3_3656 ()).
  g3_1224 n_1225 k_g3_3656 when (not (n_1225 = 0)) -> (fail_5816 true k_g3_3656).
  h5_1249 y_1250 k_h5_3931 when (y_1250 > 0) -> (k_h5_3931 ()).
  h5_1249 y_1250 k_h5_3931 when (not (y_1250 > 0)) -> (fail_5818 true k_h5_3931).
  h6_2381 z_1257 y_1258 k_h6_4007 when (y_1258 > z_1257) -> (k_h6_4007 ()).
  h6_2381 z_1257 y_1258 k_h6_4007 when (not (y_1258 > z_1257)) -> (fail_5819 true k_h6_4007).
  lock12_1199 st_1200 k_lock12_3359 -> (u_2006 st_1200 (f_lock12_5771 st_1200 k_lock12_3359)).
  m2_1218 n_1219 k_m2_3591 when (n_1219 > 0) -> (fact_1211 n_1219 exn_2382 (f_m2_5775 n_1219 k_m2_3591)).
  m2_1218 n_1219 k_m2_3591 when (not (n_1219 > 0)) -> (k_m2_3591 ()).
  m5_1251 n_1252 k_m5_3949 when (n_1252 > 0) -> (h5_1249 (n_1252 + 1) k_m5_3949).
  m5_1251 n_1252 k_m5_3949 when (not (n_1252 > 0)) -> (k_m5_3949 ()).
  m6_1259 n_1260 k_m6_4026 when (n_1260 >= 0) -> (h6_2381 n_1260 (n_1260 + 1) k_m6_4026).
  m6_1259 n_1260 k_m6_4026 when (not (n_1260 >= 0)) -> (k_m6_4026 ()).
  main_1286 n_1287 m_1288 k_main_4370 when (n_1287 = 12) ->
      (f12_1203 m_1288 0 (f_main_5783 m_1288 n_1287 k_main_4370)).
  main_1286 n_1287 m_1288 k_main_4370 when (not (n_1287 = 12)) ->
      (br_main_5812 (n_1287 = 2) n_1287 m_1288 k_main_4370).
  main_2380 k_main_4508 -> (arg1_2376 (f_main_5793 k_main_4508)).
  map_1264 x_1265 k_map_4120 when (x_1265 = 0) -> (k_map_4120 x_1265).
  map_1264 x_1265 k_map_4120 when (not (x_1265 = 0)) -> (map_1264 (x_1265 - 1) (f_map_5781 x_1265 k_map_4120)).
  mult_1281 n_1282 m_1283 k_mult_4310 when ((n_1282 <= 0) || (m_1283 <= 0)) -> (k_mult_4310 0).
  mult_1281 n_1282 m_1283 k_mult_4310 when (not ((n_1282 <= 0) || (m_1283 <= 0))) ->
      (mult_1281 n_1282 (m_1283 - 1) (f_mult_5782 m_1283 n_1282 k_mult_4310)).
  u_2006 st_1200 k_lock12_u_3370 when (st_1200 = 0) -> (k_lock12_u_3370 ()).
  u_2006 st_1200 k_lock12_u_3370 when (not (st_1200 = 0)) -> (fail_5814 true k_lock12_u_3370).
  u_2011 st_1202 k_unlock12_u_3391 when (st_1202 = 1) -> (k_unlock12_u_3391 ()).
  u_2011 st_1202 k_unlock12_u_3391 when (not (st_1202 = 1)) -> (fail_5815 true k_unlock12_u_3391).
  unlock12_1201 st_1202 k_unlock12_3380 -> (u_2011 st_1202 (f_unlock12_5772 st_1202 k_unlock12_3380)).
  zip_1261 x_1262 y_1263 k_zip_4061 when (x_1262 = 0) -> (br_zip_5796 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
  zip_1261 x_1262 y_1263 k_zip_4061 when (not (x_1262 = 0)) -> (br_zip_5798 (y_1263 = 0) x_1262 y_1263 k_zip_4061).
Types:
  main_5770 : X
  exn_2382 : (int -> (int -> X) -> X)
  f_1237 : (int -> (int -> (unit -> X) -> X) -> x_9:int[x_9 = 0] -> (unit -> X) -> X)
  fact_1211 : (x_2:int[1 <= x_2] -> (x_4:int[x_4 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  fail_5814 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5815 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5816 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5817 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5818 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5819 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5820 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5821 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5822 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5823 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5824 : (x_2:bool[x_2] -> (unit -> X) -> X)
  fail_5825 : (x_2:bool[x_2] -> (unit -> X) -> X)
  map_1264 : (x_2:int[5 <= x_2; 4 = x_2; 4 <= x_2; 3 = x_2; 3 <= x_2; 2 = x_2; 2 <= x_2; x_2 = 0; 1 = x_2; 1 <= x_2] ->
              (x_4:int[5 = x_4; 4 = x_4; 3 = x_4; 2 = x_4; 1 = x_4; x_4 = 0] -> X) -> X)
  mult_1281 : (x_2:int -> x_3:int[x_3 <= x_2] -> (x_5:int[x_5 >= x_3] -> X) -> X)
  zip_1261 : (x_2:int ->
              x_3:int[x_3 = x_2] ->
              (x_5:int[5 = x_3; 5 <= x_5; 4 = x_5; 4 = x_3; 4 <= x_5; 
                       3 = x_5; 3 = x_3; 3 <= x_5; 2 = x_5; 2 = x_3; 
                       2 <= x_5; x_5 = 0; 1 = x_5; x_5 >= 0; 1 <= x_5; 
                       1 = x_3; x_3 = 0] ->
              X) -> X)

(21-1) Abstracting ... DONE!

(21-2) Checking HORS ... 156.840
