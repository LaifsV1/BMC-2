/bin/sh: 1: no: not found
/bin/sh: 1: no: not found
/bin/sh: 1: no: not found
MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.35
  OCaml version: 4.03.0
  Command: bin/mochi.opt -limit 180 400_2-e.ml

parsed:
 let rec copy_1199 x_1200 = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 n_1202 = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 n_1204 exn_1205 =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 n_1207 = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_1208 _ = assert false; 1 in
 let m2_1210 n_1211 = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_1208 in
                                       () in
 let f3_1213 n_1214 k_1215 = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 n_1217 = assert (n_1217 = 0) in
 let m3_1218 n_1219 = f3_1213 n_1219 g3_1216 in
 let c4_1220 _ = () in
 let b4_1222 x_1223 _ = x_1223 1 in
 let a4_1225 x_2096 x_2100 q_1228 =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 n_1230 x_1231 q_1232 =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 n_1234 q_1235 = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 n_1237 = s4_1233 n_1237 0 in
 let f5_1238 x_1239 g_1240 = g_1240 (x_1239 + 1) in
 let h5_1241 y_1242 = assert (y_1242 > 0) in
 let m5_1243 n_1244 = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 x_1246 g_1247 = g_1247 (x_1246 + 1) in
 let h6_1248 z_1249 y_1250 = assert (y_1250 > z_1249) in
 let m6_1251 n_1252 = if n_1252 >= 0 then f6_1245 n_1252 (h6_1248 n_1252) in
 let rec zip_1253 x_1254 y_1255 =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 x_1257 =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 n_1259 =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 max2_1261 x_2263 x_2265 x_2266 =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 x_1266 y_1267 =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 x_2285 y_1270 z_1271 =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 g_1274 x_1275 y_1276 =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 x_1278 k_1279 =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 x_1281 y_1282 =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let m8_1283 n_1284 =
   unzip8_1277 n_1284 zip8_1280
 in
 let rec mult_1285 n_1286 m_1287 =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 n_1289 =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 n_1291 i_1292 =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 x_2429 _ des_1296 x_1297 =
   let u_2450 = des_1296 x_2429 in
   let a_1298 j_1299 =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 _ = () in
 let f20_1302 x_2463 src_1304 des_1305 =
   let rec bcopy_1306 x_2483 src_1308 
                     des_1309 i_1310 =
     if i_1310 >= x_2483
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2483 des_1309 
           (src_1308 i_1310)
       in
       bcopy_1306
         x_2483 src_1308 des_1311 
         (i_1310 + 1)
   in
   let rec print_array_1312 m_1313 x_2536 
                           i_1315 =
     if i_1315 >= m_1313
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312
         m_1313 x_2536 (i_1315 + 1)
   in
   let array_1316 =
     bcopy_1306 x_2463 src_1304 des_1305 0
   in
   print_array_1312 x_2463 array_1316 0
 in
 let m12_1317 n_1318 =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 st_1322 =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 st_1324 =
   assert (st_1324 = 1); 0
 in
 let f13_1325 n_1326 st_1327 =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 n_1329 st_1330 =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 n_1332 =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 n_1334 =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 n_1336 =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 n_1338 m_1339 =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 n_1341 =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 x_1343 = x_1343 + 1 in
 let rec repeat_1344 x_2673 n_1346 s_1347 =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 n_1349 =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 st_1351 =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 st_1353 =
   assert (st_1353 = 1); 0
 in
 let f17_1354 n_1355 st_1356 =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 n_1358 st_1359 =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 n_1361 =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 n_1363 =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 n_1365 =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 n_1367 i_1368 =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 i_1370 a_1371 x_1372 
                  j_1373 =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 i_1375 n_1376 a_1377 =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 k_1379 n_1380 i_1381 =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 n_1384 i_1385 =
   n_1384 - i_1385
 in
 let rec array_max23_1386 x_2875 i_1388 
                         x_2882 m_1390 =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 n_1394 i_1395 =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 n_1398 i_1399 =
   n_1398 - i_1399
 in
 let rec array_max24_1400 x_2940 i_1402 
                         x_2947 m_1404 =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 n_1408 i_1409 =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 n_1412 m_1413 =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 n_1415 m_1416 =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 n_1418 m_1419 =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 n_1421 m_1422 =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 n_1424 i_1425 =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 i_1427 a_1428 x_1429 
                  j_1430 =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 i_1432 n_1433 a_1434 =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 k_1436 n_1437 i_1438 =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 n_1441 m_1442 =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 n_1444 m_1445 =
   if n_1444 <= 0
   then
     0
   else
     if Pervasives.== n_1444 1
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 n_1447 m_1448 =
   assert (Pervasives.==
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 n_1450 m_1451 =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 ()


###set_main:
 let rec copy_1199 (x_1200:int) = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 (n_1202:int) = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 (n_1204:int) (exn_1205:(int -> int)) =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 (n_1207:int) = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_1208 (_:!!!) = assert false; 1 in
 let m2_1210 (n_1211:int) = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_1208 in
                                             () in
 let f3_1213 (n_1214:int) (k_1215:(int -> unit)) = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 (n_1217:int) = assert (n_1217 = 0) in
 let m3_1218 (n_1219:int) = f3_1213 n_1219 g3_1216 in
 let c4_1220 (_:int) = () in
 let b4_1222 (x_1223:(int -> unit)) (_:int) = x_1223 1 in
 let a4_1225 (x_2096:(int -> unit)) (x_2100:(int -> unit)) (q_1228:int) =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 (n_1230:int) (x_1231:(int -> unit)) (q_1232:int) =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 (n_1234:int) (q_1235:int) = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 (n_1237:int) = s4_1233 n_1237 0 in
 let f5_1238 (x_1239:int) (g_1240:(int -> unit)) = g_1240 (x_1239 + 1) in
 let h5_1241 (y_1242:int) = assert (y_1242 > 0) in
 let m5_1243 (n_1244:int) = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 (x_1246:int) (g_1247:(int -> unit)) = g_1247 (x_1246 + 1) in
 let h6_1248 (z_1249:!!!) (y_1250:!!!) = assert (y_1250 > z_1249) in
 let m6_1251 (n_1252:int) =
   if n_1252 >= 0 then f6_1245 n_1252 (h6_1248 n_1252)
 in
 let rec zip_1253 (x_1254:int) (y_1255:int) =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 (x_1257:int) =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 (n_1259:int) =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 (max2_1261:(int -> int -> int)) (x_2263:int) 
             (x_2265:int) (x_2266:int) =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 (x_1266:int) (y_1267:int) =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 (x_2285:int) (y_1270:int) (z_1271:int) =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 (g_1274:(int -> int -> int)) 
            (x_1275:int) (y_1276:int) =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 (x_1278:int) 
                    (k_1279:(int -> int -> int)) =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 (x_1281:int) (y_1282:int) =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let m8_1283 (n_1284:int) =
   unzip8_1277 n_1284 zip8_1280
 in
 let rec mult_1285 (n_1286:int) 
                  (m_1287:int) =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 (n_1289:int) =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 (n_1291:int) 
                    (i_1292:int) =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 (x_2429:int) (_:int) 
                (des_1296:(int -> int)) 
                (x_1297:int) =
   let u_2450 = des_1296 x_2429 in
   let a_1298 (j_1299:int) =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 (_:int) = () in
 let f20_1302 (x_2463:int) 
             (src_1304:(int -> int)) 
             (des_1305:(int -> int)) =
   let rec bcopy_1306 (x_2483:int) 
                     (src_1308:(int -> int)) 
                     (des_1309:(int -> int)) 
                     (i_1310:int) =
     if i_1310 >= x_2483
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2483 des_1309 
           (src_1308 i_1310)
       in
       bcopy_1306
         x_2483 src_1308 des_1311 
         (i_1310 + 1)
   in
   let rec print_array_1312 (m_1313:int) 
                           (x_2536:(int ->
                                      int))
                           (i_1315:int) =
     if i_1315 >= m_1313
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312
         m_1313 x_2536 (i_1315 + 1)
   in
   let array_1316 =
     bcopy_1306 x_2463 src_1304 des_1305 0
   in
   print_array_1312 x_2463 array_1316 0
 in
 let m12_1317 (n_1318:int) =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 (st_1322:int) =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 (st_1324:int) =
   assert (st_1324 = 1); 0
 in
 let f13_1325 (n_1326:int) (st_1327:int) =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 (n_1329:int) (st_1330:int) =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 (n_1332:int) =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 (n_1334:int) =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 (n_1336:int) =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 (n_1338:int) 
                  (m_1339:int) =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 (n_1341:int) =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 (x_1343:int) = x_1343 + 1 in
 let rec repeat_1344 (x_2673:(int -> int)) 
                    (n_1346:int) 
                    (s_1347:int) =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 (n_1349:int) =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 (st_1351:int) =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 (st_1353:int) =
   assert (st_1353 = 1); 0
 in
 let f17_1354 (n_1355:int) (st_1356:int) =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 (n_1358:int) (st_1359:int) =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 (n_1361:int) =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 (n_1363:int) =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 (n_1365:int) =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 (n_1367:int) 
                      (i_1368:int) =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 (i_1370:int) 
                  (a_1371:(int -> int)) 
                  (x_1372:int) (j_1373:int) =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 (i_1375:int) 
                  (n_1376:int) 
                  (a_1377:(int -> int)) =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 (k_1379:int) (n_1380:int) 
             (i_1381:int) =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 (n_1384:int) 
                      (i_1385:int) =
   n_1384 - i_1385
 in
 let rec array_max23_1386 (x_2875:int) 
                         (i_1388:int) 
                         (x_2882:(int ->
                                    int))
                         (m_1390:int) =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 (n_1394:int) (i_1395:int) =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 (n_1398:int) 
                      (i_1399:int) =
   n_1398 - i_1399
 in
 let rec array_max24_1400 (x_2940:int) 
                         (i_1402:int) 
                         (x_2947:(int ->
                                    int))
                         (m_1404:int) =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 (n_1408:int) (i_1409:int) =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 (n_1412:int) 
                    (m_1413:int) =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 (n_1415:int) (m_1416:int) =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 (n_1418:int) 
                    (m_1419:int) =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 (n_1421:int) (m_1422:int) =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 (n_1424:int) 
                      (i_1425:int) =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 (i_1427:int) 
                  (a_1428:(int -> int)) 
                  (x_1429:int) (j_1430:int) =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 (i_1432:int) 
                    (n_1433:int) 
                    (a_1434:(int -> int)) =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 (k_1436:int) (n_1437:int) 
             (i_1438:int) =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 (n_1441:int) 
                   (m_1442:int) =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 (n_1444:int) 
                      (m_1445:int) =
   if n_1444 <= 0
   then
     0
   else
     if Pervasives.== n_1444 1
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 (n_1447:int) (m_1448:int) =
   assert (Pervasives.==
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 (n_1450:int) (m_1451:int) =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 (let arg1_3280 = rand_int () in
  let arg2_3282 = rand_int () in
  main_1449 arg1_3280 arg2_3282);
 ()

###Copy_poly:
 let rec copy_1199 (x_1200:int) = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 (n_1202:int) = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 (n_1204:int) (exn_1205:(int -> int)) =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 (n_1207:int) = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_3286 (_:int) = assert false; 1 in
 let m2_1210 (n_1211:int) = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_3286 in
                                             () in
 let f3_1213 (n_1214:int) (k_1215:(int -> unit)) = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 (n_1217:int) = assert (n_1217 = 0) in
 let m3_1218 (n_1219:int) = f3_1213 n_1219 g3_1216 in
 let c4_1220 (_:int) = () in
 let b4_1222 (x_1223:(int -> unit)) (_:int) = x_1223 1 in
 let a4_1225 (x_2096:(int -> unit)) (x_2100:(int -> unit)) (q_1228:int) =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 (n_1230:int) (x_1231:(int -> unit)) (q_1232:int) =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 (n_1234:int) (q_1235:int) = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 (n_1237:int) = s4_1233 n_1237 0 in
 let f5_1238 (x_1239:int) (g_1240:(int -> unit)) = g_1240 (x_1239 + 1) in
 let h5_1241 (y_1242:int) = assert (y_1242 > 0) in
 let m5_1243 (n_1244:int) = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 (x_1246:int) (g_1247:(int -> unit)) = g_1247 (x_1246 + 1) in
 let h6_3285 (z_1249:int) (y_1250:int) = assert (y_1250 > z_1249) in
 let m6_1251 (n_1252:int) =
   if n_1252 >= 0 then f6_1245 n_1252 (h6_3285 n_1252)
 in
 let rec zip_1253 (x_1254:int) (y_1255:int) =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 (x_1257:int) =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 (n_1259:int) =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 (max2_1261:(int -> int -> int)) (x_2263:int) 
             (x_2265:int) (x_2266:int) =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 (x_1266:int) (y_1267:int) =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 (x_2285:int) (y_1270:int) (z_1271:int) =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 (g_1274:(int -> int -> int)) 
            (x_1275:int) (y_1276:int) =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 (x_1278:int) 
                    (k_1279:(int -> int -> int)) =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 (x_1281:int) (y_1282:int) =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let m8_1283 (n_1284:int) =
   unzip8_1277 n_1284 zip8_1280
 in
 let rec mult_1285 (n_1286:int) 
                  (m_1287:int) =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 (n_1289:int) =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 (n_1291:int) 
                    (i_1292:int) =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 (x_2429:int) (_:int) 
                (des_1296:(int -> int)) 
                (x_1297:int) =
   let u_2450 = des_1296 x_2429 in
   let a_1298 (j_1299:int) =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 (_:int) = () in
 let f20_1302 (x_2463:int) 
             (src_1304:(int -> int)) 
             (des_1305:(int -> int)) =
   let rec bcopy_1306 (x_2483:int) 
                     (src_1308:(int -> int)) 
                     (des_1309:(int -> int)) 
                     (i_1310:int) =
     if i_1310 >= x_2483
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2483 des_1309 
           (src_1308 i_1310)
       in
       bcopy_1306
         x_2483 src_1308 des_1311 
         (i_1310 + 1)
   in
   let rec print_array_1312 (m_1313:int) 
                           (x_2536:(int ->
                                      int))
                           (i_1315:int) =
     if i_1315 >= m_1313
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312
         m_1313 x_2536 (i_1315 + 1)
   in
   let array_1316 =
     bcopy_1306 x_2463 src_1304 des_1305 0
   in
   print_array_1312 x_2463 array_1316 0
 in
 let m12_1317 (n_1318:int) =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 (st_1322:int) =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 (st_1324:int) =
   assert (st_1324 = 1); 0
 in
 let f13_1325 (n_1326:int) (st_1327:int) =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 (n_1329:int) (st_1330:int) =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 (n_1332:int) =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 (n_1334:int) =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 (n_1336:int) =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 (n_1338:int) 
                  (m_1339:int) =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 (n_1341:int) =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 (x_1343:int) = x_1343 + 1 in
 let rec repeat_1344 (x_2673:(int -> int)) 
                    (n_1346:int) 
                    (s_1347:int) =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 (n_1349:int) =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 (st_1351:int) =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 (st_1353:int) =
   assert (st_1353 = 1); 0
 in
 let f17_1354 (n_1355:int) (st_1356:int) =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 (n_1358:int) (st_1359:int) =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 (n_1361:int) =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 (n_1363:int) =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 (n_1365:int) =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 (n_1367:int) 
                      (i_1368:int) =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 (i_1370:int) 
                  (a_1371:(int -> int)) 
                  (x_1372:int) (j_1373:int) =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 (i_1375:int) 
                  (n_1376:int) 
                  (a_1377:(int -> int)) =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 (k_1379:int) (n_1380:int) 
             (i_1381:int) =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 (n_1384:int) 
                      (i_1385:int) =
   n_1384 - i_1385
 in
 let rec array_max23_1386 (x_2875:int) 
                         (i_1388:int) 
                         (x_2882:(int ->
                                    int))
                         (m_1390:int) =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 (n_1394:int) (i_1395:int) =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 (n_1398:int) 
                      (i_1399:int) =
   n_1398 - i_1399
 in
 let rec array_max24_1400 (x_2940:int) 
                         (i_1402:int) 
                         (x_2947:(int ->
                                    int))
                         (m_1404:int) =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 (n_1408:int) (i_1409:int) =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 (n_1412:int) 
                    (m_1413:int) =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 (n_1415:int) (m_1416:int) =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 (n_1418:int) 
                    (m_1419:int) =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 (n_1421:int) (m_1422:int) =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 (n_1424:int) 
                      (i_1425:int) =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 (i_1427:int) 
                  (a_1428:(int -> int)) 
                  (x_1429:int) (j_1430:int) =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 (i_1432:int) 
                    (n_1433:int) 
                    (a_1434:(int -> int)) =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 (k_1436:int) (n_1437:int) 
             (i_1438:int) =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 (n_1441:int) 
                   (m_1442:int) =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 (n_1444:int) 
                      (m_1445:int) =
   if n_1444 <= 0
   then
     0
   else
     if Pervasives.== n_1444 1
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 (n_1447:int) (m_1448:int) =
   assert (Pervasives.==
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 (n_1450:int) (m_1451:int) =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 (let arg1_3280 = rand_int () in
  let arg2_3282 = rand_int () in
  main_1449 arg1_3280 arg2_3282);
 ()

###Make_ext_funs:
 let Pervasives.==_3803 (_:int) (_:int) = rand_bool () in
 let rec copy_1199 (x_1200:int) = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 (n_1202:int) = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 (n_1204:int) (exn_1205:(int -> int)) =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 (n_1207:int) = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_3286 (_:int) = assert false; 1 in
 let m2_1210 (n_1211:int) = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_3286 in
                                             () in
 let f3_1213 (n_1214:int) (k_1215:(int -> unit)) = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 (n_1217:int) = assert (n_1217 = 0) in
 let m3_1218 (n_1219:int) = f3_1213 n_1219 g3_1216 in
 let c4_1220 (_:int) = () in
 let b4_1222 (x_1223:(int -> unit)) (_:int) = x_1223 1 in
 let a4_1225 (x_2096:(int -> unit)) (x_2100:(int -> unit)) (q_1228:int) =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 (n_1230:int) (x_1231:(int -> unit)) (q_1232:int) =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 (n_1234:int) (q_1235:int) = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 (n_1237:int) = s4_1233 n_1237 0 in
 let f5_1238 (x_1239:int) (g_1240:(int -> unit)) = g_1240 (x_1239 + 1) in
 let h5_1241 (y_1242:int) = assert (y_1242 > 0) in
 let m5_1243 (n_1244:int) = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 (x_1246:int) (g_1247:(int -> unit)) = g_1247 (x_1246 + 1) in
 let h6_3285 (z_1249:int) (y_1250:int) = assert (y_1250 > z_1249) in
 let m6_1251 (n_1252:int) =
   if n_1252 >= 0 then f6_1245 n_1252 (h6_3285 n_1252)
 in
 let rec zip_1253 (x_1254:int) (y_1255:int) =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 (x_1257:int) =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 (n_1259:int) =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 (max2_1261:(int -> int -> int)) (x_2263:int) 
             (x_2265:int) (x_2266:int) =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 (x_1266:int) (y_1267:int) =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 (x_2285:int) (y_1270:int) (z_1271:int) =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 (g_1274:(int -> int -> int)) 
            (x_1275:int) (y_1276:int) =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 (x_1278:int) 
                    (k_1279:(int -> int -> int)) =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 (x_1281:int) (y_1282:int) =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let m8_1283 (n_1284:int) =
   unzip8_1277 n_1284 zip8_1280
 in
 let rec mult_1285 (n_1286:int) 
                  (m_1287:int) =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 (n_1289:int) =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 (n_1291:int) 
                    (i_1292:int) =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 (x_2429:int) (_:int) 
                (des_1296:(int -> int)) 
                (x_1297:int) =
   let u_2450 = des_1296 x_2429 in
   let a_1298 (j_1299:int) =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 (_:int) = () in
 let f20_1302 (x_2463:int) 
             (src_1304:(int -> int)) 
             (des_1305:(int -> int)) =
   let rec bcopy_1306 (x_2483:int) 
                     (src_1308:(int -> int)) 
                     (des_1309:(int -> int)) 
                     (i_1310:int) =
     if i_1310 >= x_2483
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2483 des_1309 
           (src_1308 i_1310)
       in
       bcopy_1306
         x_2483 src_1308 des_1311 
         (i_1310 + 1)
   in
   let rec print_array_1312 (m_1313:int) 
                           (x_2536:(int ->
                                      int))
                           (i_1315:int) =
     if i_1315 >= m_1313
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312
         m_1313 x_2536 (i_1315 + 1)
   in
   let array_1316 =
     bcopy_1306 x_2463 src_1304 des_1305 0
   in
   print_array_1312 x_2463 array_1316 0
 in
 let m12_1317 (n_1318:int) =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 (st_1322:int) =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 (st_1324:int) =
   assert (st_1324 = 1); 0
 in
 let f13_1325 (n_1326:int) (st_1327:int) =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 (n_1329:int) (st_1330:int) =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 (n_1332:int) =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 (n_1334:int) =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 (n_1336:int) =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 (n_1338:int) 
                  (m_1339:int) =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 (n_1341:int) =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 (x_1343:int) = x_1343 + 1 in
 let rec repeat_1344 (x_2673:(int -> int)) 
                    (n_1346:int) 
                    (s_1347:int) =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 (n_1349:int) =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 (st_1351:int) =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 (st_1353:int) =
   assert (st_1353 = 1); 0
 in
 let f17_1354 (n_1355:int) (st_1356:int) =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 (n_1358:int) (st_1359:int) =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 (n_1361:int) =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 (n_1363:int) =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 (n_1365:int) =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 (n_1367:int) 
                      (i_1368:int) =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 (i_1370:int) 
                  (a_1371:(int -> int)) 
                  (x_1372:int) (j_1373:int) =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 (i_1375:int) 
                  (n_1376:int) 
                  (a_1377:(int -> int)) =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 (k_1379:int) (n_1380:int) 
             (i_1381:int) =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 (n_1384:int) 
                      (i_1385:int) =
   n_1384 - i_1385
 in
 let rec array_max23_1386 (x_2875:int) 
                         (i_1388:int) 
                         (x_2882:(int ->
                                    int))
                         (m_1390:int) =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 (n_1394:int) (i_1395:int) =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 (n_1398:int) 
                      (i_1399:int) =
   n_1398 - i_1399
 in
 let rec array_max24_1400 (x_2940:int) 
                         (i_1402:int) 
                         (x_2947:(int ->
                                    int))
                         (m_1404:int) =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 (n_1408:int) (i_1409:int) =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 (n_1412:int) 
                    (m_1413:int) =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 (n_1415:int) (m_1416:int) =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 (n_1418:int) 
                    (m_1419:int) =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 (n_1421:int) (m_1422:int) =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 (n_1424:int) 
                      (i_1425:int) =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 (i_1427:int) 
                  (a_1428:(int -> int)) 
                  (x_1429:int) (j_1430:int) =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 (i_1432:int) 
                    (n_1433:int) 
                    (a_1434:(int -> int)) =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 (k_1436:int) (n_1437:int) 
             (i_1438:int) =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 (n_1441:int) 
                   (m_1442:int) =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 (n_1444:int) 
                      (m_1445:int) =
   if n_1444 <= 0
   then
     0
   else
     if Pervasives.==_3803 n_1444 1
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 (n_1447:int) (m_1448:int) =
   assert (Pervasives.==_3803
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 (n_1450:int) (m_1451:int) =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 (let arg1_3280 = rand_int () in
  let arg2_3282 = rand_int () in
  main_1449 arg1_3280 arg2_3282);
 ()

###Beta_reduce_trivial:
 let Pervasives.==_3803 (_:int) (_:int) = rand_bool () in
 let rec copy_1199 (x_1200:int) = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 (n_1202:int) = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 (n_1204:int) (exn_1205:(int -> int)) =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 (n_1207:int) = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_3286 (_:int) = assert false; 1 in
 let m2_1210 (n_1211:int) = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_3286 in
                                             () in
 let f3_1213 (n_1214:int) (k_1215:(int -> unit)) = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 (n_1217:int) = assert (n_1217 = 0) in
 let m3_1218 (n_1219:int) = f3_1213 n_1219 g3_1216 in
 let c4_1220 (_:int) = () in
 let b4_1222 (x_1223:(int -> unit)) (_:int) = x_1223 1 in
 let a4_1225 (x_2096:(int -> unit)) (x_2100:(int -> unit)) (q_1228:int) =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 (n_1230:int) (x_1231:(int -> unit)) (q_1232:int) =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 (n_1234:int) (q_1235:int) = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 (n_1237:int) = s4_1233 n_1237 0 in
 let f5_1238 (x_1239:int) (g_1240:(int -> unit)) = g_1240 (x_1239 + 1) in
 let h5_1241 (y_1242:int) = assert (y_1242 > 0) in
 let m5_1243 (n_1244:int) = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 (x_1246:int) (g_1247:(int -> unit)) = g_1247 (x_1246 + 1) in
 let h6_3285 (z_1249:int) (y_1250:int) = assert (y_1250 > z_1249) in
 let m6_1251 (n_1252:int) =
   if n_1252 >= 0 then f6_1245 n_1252 (h6_3285 n_1252)
 in
 let rec zip_1253 (x_1254:int) (y_1255:int) =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 (x_1257:int) =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 (n_1259:int) =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 (max2_1261:(int -> int -> int)) (x_2263:int) 
             (x_2265:int) (x_2266:int) =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 (x_1266:int) (y_1267:int) =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 (x_2285:int) (y_1270:int) (z_1271:int) =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 (g_1274:(int -> int -> int)) 
            (x_1275:int) (y_1276:int) =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 (x_1278:int) 
                    (k_1279:(int -> int -> int)) =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 (x_1281:int) (y_1282:int) =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let rec mult_1285 (n_1286:int) 
                  (m_1287:int) =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 (n_1289:int) =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 (n_1291:int) 
                    (i_1292:int) =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 (x_2429:int) (_:int) 
                (des_1296:(int -> int)) 
                (x_1297:int) =
   let u_2450 = des_1296 x_2429 in
   let a_1298 (j_1299:int) =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 (_:int) = () in
 let f20_1302 (x_2463:int) 
             (src_1304:(int -> int)) 
             (des_1305:(int -> int)) =
   let rec bcopy_1306 (x_2483:int) 
                     (src_1308:(int -> int)) 
                     (des_1309:(int -> int)) 
                     (i_1310:int) =
     if i_1310 >= x_2483
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2483 des_1309 
           (src_1308 i_1310)
       in
       bcopy_1306
         x_2483 src_1308 des_1311 
         (i_1310 + 1)
   in
   let rec print_array_1312 (m_1313:int) 
                           (x_2536:(int ->
                                      int))
                           (i_1315:int) =
     if i_1315 >= m_1313
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312
         m_1313 x_2536 (i_1315 + 1)
   in
   let array_1316 =
     bcopy_1306 x_2463 src_1304 des_1305 0
   in
   print_array_1312 x_2463 array_1316 0
 in
 let m12_1317 (n_1318:int) =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 (st_1322:int) =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 (st_1324:int) =
   assert (st_1324 = 1); 0
 in
 let f13_1325 (n_1326:int) (st_1327:int) =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 (n_1329:int) (st_1330:int) =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 (n_1332:int) =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 (n_1334:int) =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 (n_1336:int) =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 (n_1338:int) 
                  (m_1339:int) =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 (n_1341:int) =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 (x_1343:int) = x_1343 + 1 in
 let rec repeat_1344 (x_2673:(int -> int)) 
                    (n_1346:int) 
                    (s_1347:int) =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 (n_1349:int) =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 (st_1351:int) =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 (st_1353:int) =
   assert (st_1353 = 1); 0
 in
 let f17_1354 (n_1355:int) (st_1356:int) =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 (n_1358:int) (st_1359:int) =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 (n_1361:int) =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 (n_1363:int) =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 (n_1365:int) =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 (n_1367:int) 
                      (i_1368:int) =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 (i_1370:int) 
                  (a_1371:(int -> int)) 
                  (x_1372:int) (j_1373:int) =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 (i_1375:int) 
                  (n_1376:int) 
                  (a_1377:(int -> int)) =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 (k_1379:int) (n_1380:int) 
             (i_1381:int) =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 (n_1384:int) 
                      (i_1385:int) =
   n_1384 - i_1385
 in
 let rec array_max23_1386 (x_2875:int) 
                         (i_1388:int) 
                         (x_2882:(int ->
                                    int))
                         (m_1390:int) =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 (n_1394:int) (i_1395:int) =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 (n_1398:int) 
                      (i_1399:int) =
   n_1398 - i_1399
 in
 let rec array_max24_1400 (x_2940:int) 
                         (i_1402:int) 
                         (x_2947:(int ->
                                    int))
                         (m_1404:int) =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 (n_1408:int) (i_1409:int) =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 (n_1412:int) 
                    (m_1413:int) =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 (n_1415:int) (m_1416:int) =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 (n_1418:int) 
                    (m_1419:int) =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 (n_1421:int) (m_1422:int) =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 (n_1424:int) 
                      (i_1425:int) =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 (i_1427:int) 
                  (a_1428:(int -> int)) 
                  (x_1429:int) (j_1430:int) =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 (i_1432:int) 
                    (n_1433:int) 
                    (a_1434:(int -> int)) =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 (k_1436:int) (n_1437:int) 
             (i_1438:int) =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 (n_1441:int) 
                   (m_1442:int) =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 (n_1444:int) 
                      (m_1445:int) =
   if n_1444 <= 0
   then
     0
   else
     if (rand_bool ())
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 (n_1447:int) (m_1448:int) =
   assert (Pervasives.==_3803
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 (n_1450:int) (m_1451:int) =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 (let arg1_3280 = rand_int () in
  let arg2_3282 = rand_int () in
  main_1449 arg1_3280 arg2_3282);
 ()

###Eliminate_redundant_arguments:
 let Pervasives.==_3803 (_:int) (_:int) = rand_bool () in
 let rec copy_1199 (x_1200:int) = if x_1200 = 0 then 0 else 1 + copy_1199 (x_1200 - 1) in
 let m1_1201 (n_1202:int) = assert (copy_1199 (copy_1199 n_1202) = n_1202) in
 let rec fact_1203 (n_1204:int) (exn_1205:(int -> int)) =
   if n_1204 <= 0
   then
     exn_1205 0
   else
     let exn_1206 (n_1207:int) = if n_1207 = 0 then 1 else exn_1205 n_1207 in
     n_1204 * fact_1203 (n_1204 - 1) exn_1206
 in
 let exn_3286 (_:int) = assert false; 1 in
 let m2_1210 (n_1211:int) = if n_1211 > 0 then let x_1212 = fact_1203 n_1211 exn_3286 in
                                             () in
 let f3_1213 (n_1214:int) (k_1215:(int -> unit)) = if n_1214 >= 0 then () else k_1215 0 in
 let g3_1216 (n_1217:int) = assert (n_1217 = 0) in
 let m3_1218 (n_1219:int) = f3_1213 n_1219 g3_1216 in
 let c4_1220 (_:int) = () in
 let b4_1222 (x_1223:(int -> unit)) (_:int) = x_1223 1 in
 let a4_1225 (x_2096:(int -> unit)) (x_2100:(int -> unit)) (q_1228:int) =
   if q_1228 = 0 then x_2096 0; x_2100 0 else assert false
 in
 let rec f_1229 (n_1230:int) (x_1231:(int -> unit)) (q_1232:int) =
   if n_1230 <= 0
   then
     x_1231 q_1232
   else
     a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232
 in
 let s4_1233 (n_1234:int) (q_1235:int) = f_1229 n_1234 c4_1220 q_1235 in
 let m4_1236 (n_1237:int) = s4_1233 n_1237 0 in
 let f5_1238 (x_1239:int) (g_1240:(int -> unit)) = g_1240 (x_1239 + 1) in
 let h5_1241 (y_1242:int) = assert (y_1242 > 0) in
 let m5_1243 (n_1244:int) = if n_1244 > 0 then f5_1238 n_1244 h5_1241 in
 let f6_1245 (x_1246:int) (g_1247:(int -> unit)) = g_1247 (x_1246 + 1) in
 let h6_3285 (z_1249:int) (y_1250:int) = assert (y_1250 > z_1249) in
 let m6_1251 (n_1252:int) =
   if n_1252 >= 0 then f6_1245 n_1252 (h6_3285 n_1252)
 in
 let rec zip_1253 (x_1254:int) (y_1255:int) =
   if x_1254 = 0
   then
     if y_1255 = 0 then x_1254 else assert false
   else
     if y_1255 = 0
     then
       assert false
     else
       1 + zip_1253 (x_1254 - 1) (y_1255 - 1)
 in
 let rec map_1256 (x_1257:int) =
   if x_1257 = 0 then x_1257 else 1 + map_1256 (x_1257 - 1)
 in
 let m7_1258 (n_1259:int) =
   assert (map_1256 (zip_1253 n_1259 n_1259) = n_1259)
 in
 let max_1260 (max2_1261:(int -> int -> int)) (x_2263:int) 
             (x_2265:int) (x_2266:int) =
   max2_1261 (max2_1261 x_2263 x_2265) x_2266
 in
 let f9_1265 (x_1266:int) (y_1267:int) =
   if x_1266 >= y_1267 then x_1266 else y_1267
 in
 let m9_1268 (x_2285:int) (y_1270:int) (z_1271:int) =
   let m_1272 =
     max_1260 f9_1265 x_2285 y_1270 z_1271
   in
   assert (f9_1265 x_2285 m_1272 = m_1272)
 in
 let f8_1273 (g_1274:(int -> int -> int)) 
            (x_1275:int) (y_1276:int) =
   g_1274 (x_1275 + 1) (y_1276 + 1)
 in
 let rec unzip8_1277 (x_1278:int) 
                    (k_1279:(int -> int -> int)) =
   if x_1278 = 0
   then
     k_1279 0 0
   else
     unzip8_1277 (x_1278 - 1) (f8_1273 k_1279)
 in
 let rec zip8_1280 (x_1281:int) (y_1282:int) =
   if x_1281 = 0
   then
     if y_1282 = 0 then 0 else assert false
   else
     if y_1282 = 0
     then
       assert false
     else
       1 +
       zip8_1280 (x_1281 - 1) (y_1282 - 1)
 in
 let rec mult_1285 (n_1286:int) 
                  (m_1287:int) =
   if n_1286 <= 0 || m_1287 <= 0
   then
     0
   else
     n_1286 + mult_1285 n_1286 (m_1287 - 1)
 in
 let m11_1288 (n_1289:int) =
   assert (n_1289 <=
           mult_1285 n_1289 n_1289)
 in
 let make_array_1290 (n_1291:int) 
                    (i_1292:int) =
   assert (0 <= i_1292 && i_1292 < n_1291);
   0
 in
 let update_1293 (x_2429:int) (_:int) 
                (des_1296:(int -> int)) 
                (x_1297:int) =
   let u_2450 = des_1296 x_2429 in
   let a_1298 (j_1299:int) =
     if x_2429 = j_1299
     then
       x_1297
     else
       des_1296 x_2429
   in
   a_1298
 in
 let print_int_1300 (_:int) = () in
 let f20_1302 (x_2463:int) 
             (src_1304:(int -> int)) 
             (des_1305:(int -> int)) =
   let rec bcopy_1306
                     (des_1309:(int -> int)) 
                     (i_1310:int) =
     if i_1310 >= x_2463
     then
       des_1309
     else
       let des_1311 =
         update_1293
           i_1310 x_2463 des_1309 
           (src_1304 i_1310)
       in
       bcopy_1306 des_1311 (i_1310 + 1)
   in
   let rec print_array_1312
                           (x_2536:(int ->
                                      int))
                           (i_1315:int) =
     if i_1315 >= x_2463
     then
       ()
     else
       print_int_1300 (des_1305 i_1315);
       print_array_1312 x_2536 (i_1315 + 1)
   in
   let array_1316 = bcopy_1306 des_1305 0 in
   print_array_1312 array_1316 0
 in
 let m12_1317 (n_1318:int) =
   let array1_1319 = make_array_1290 n_1318 in
   let array2_1320 = make_array_1290 n_1318 in
   if n_1318 > 0
   then
     f20_1302
       n_1318 array1_1319 array2_1320
 in
 let lock_1321 (st_1322:int) =
   assert (st_1322 = 0); 1
 in
 let unlock_1323 (st_1324:int) =
   assert (st_1324 = 1); 0
 in
 let f13_1325 (n_1326:int) (st_1327:int) =
   if n_1326 > 0
   then
     lock_1321 st_1327
   else
     st_1327
 in
 let g13_1328 (n_1329:int) (st_1330:int) =
   if n_1329 > 0
   then
     unlock_1323 st_1330
   else
     st_1330
 in
 let m13_1331 (n_1332:int) =
   assert (g13_1328
             n_1332 (f13_1325 n_1332 0)
           = 0)
 in
 let rec sum_1333 (n_1334:int) =
   if n_1334 <= 0
   then
     0
   else
     n_1334 + sum_1333 (n_1334 - 1)
 in
 let m14_1335 (n_1336:int) =
   assert (n_1336 <= sum_1333 n_1336)
 in
 let rec mult_1337 (n_1338:int) 
                  (m_1339:int) =
   if n_1338 <= 0 || m_1339 <= 0
   then
     0
   else
     n_1338 + mult_1337 n_1338 (m_1339 - 1)
 in
 let m15_1340 (n_1341:int) =
   assert (n_1341 + 1 <=
           mult_1337 n_1341 n_1341)
 in
 let succ_1342 (x_1343:int) = x_1343 + 1 in
 let rec repeat_1344 (x_2673:(int -> int)) 
                    (n_1346:int) 
                    (s_1347:int) =
   if n_1346 = 0
   then
     s_1347
   else
     x_2673
       (repeat_1344
         x_2673 (n_1346 - 1) s_1347)
 in
 let m16_1348 (n_1349:int) =
   assert (repeat_1344 succ_1342 n_1349 0 >
           n_1349)
 in
 let lock_1350 (st_1351:int) =
   assert (st_1351 = 0); 1
 in
 let unlock_1352 (st_1353:int) =
   assert (st_1353 = 1); 0
 in
 let f17_1354 (n_1355:int) (st_1356:int) =
   if n_1355 > 0
   then
     lock_1350 st_1356
   else
     st_1356
 in
 let g17_1357 (n_1358:int) (st_1359:int) =
   if n_1358 >= 0
   then
     unlock_1352 st_1359
   else
     st_1359
 in
 let m17_1360 (n_1361:int) =
   assert (g17_1357
             n_1361 (f17_1354 n_1361 0)
           = 0)
 in
 let rec sum_1362 (n_1363:int) =
   if n_1363 <= 0
   then
     0
   else
     n_1363 + sum_1362 (n_1363 - 1)
 in
 let m18_1364 (n_1365:int) =
   assert (n_1365 + 1 <= sum_1362 n_1365)
 in
 let make_array21_1366 (n_1367:int) 
                      (i_1368:int) =
   assert (0 <= i_1368 && i_1368 < n_1367);
   0
 in
 let update21_1369 (i_1370:int) 
                  (a_1371:(int -> int)) 
                  (x_1372:int) (j_1373:int) =
   if
     j_1373 > i_1370 - 1 &&
     j_1373 <= i_1370
   then
     x_1372
   else
     a_1371 j_1373
 in
 let rec init_1374 (i_1375:int) 
                  (n_1376:int) 
                  (a_1377:(int -> int)) =
   if i_1375 >= n_1376
   then
     a_1377
   else
     init_1374
       (i_1375 + 1) n_1376 
       (update21_1369 i_1375 a_1377 1)
 in
 let m21_1378 (k_1379:int) (n_1380:int) 
             (i_1381:int) =
   if k_1379 >= 0 && k_1379 <= 0
   then
     let x_1382 =
       init_1374
         k_1379 n_1380 
         (make_array21_1366 n_1380)
     in
     if 0 <= i_1381 && i_1381 < n_1380
     then
       assert (x_1382 i_1381 >= 1)
 in
 let make_array23_1383 (n_1384:int) 
                      (i_1385:int) =
   n_1384 - i_1385
 in
 let rec array_max23_1386 (x_2875:int) 
                         (i_1388:int) 
                         (x_2882:(int ->
                                    int))
                         (m_1390:int) =
   if i_1388 >= x_2875
   then
     m_1390
   else
     let x_1391 = x_2882 i_1388 in
     let z_1392 =
       if x_1391 > m_1390
       then
         x_1391
       else
         m_1390
     in
     array_max23_1386
       x_2875 (i_1388 + 1) x_2882 z_1392
 in
 let m23_1393 (n_1394:int) (i_1395:int) =
   if
     n_1394 > 0 &&
     (i_1395 >= 0 && i_1395 <= 0)
   then
     let m_1396 =
       array_max23_1386
         n_1394 i_1395 
         (make_array23_1383 n_1394) (-1)
     in
     assert (m_1396 >= n_1394)
 in
 let make_array24_1397 (n_1398:int) 
                      (i_1399:int) =
   n_1398 - i_1399
 in
 let rec array_max24_1400 (x_2940:int) 
                         (i_1402:int) 
                         (x_2947:(int ->
                                    int))
                         (m_1404:int) =
   if i_1402 >= x_2940
   then
     m_1404
   else
     let x_1405 = x_2947 i_1402 in
     let z_1406 =
       if x_1405 > m_1404
       then
         x_1405
       else
         m_1404
     in
     array_max24_1400
       x_2940 (i_1402 + 1) x_2947 z_1406
 in
 let m24_1407 (n_1408:int) (i_1409:int) =
   if
     n_1408 > 0 &&
     (i_1409 >= 0 && i_1409 <= 0)
   then
     let m_1410 =
       array_max24_1400
         n_1408 i_1409 
         (make_array24_1397 n_1408) (-1)
     in
     assert (m_1410 <> n_1408)
 in
 let rec mult25_1411 (n_1412:int) 
                    (m_1413:int) =
   if n_1412 <= 0 || m_1413 <= 0
   then
     0
   else
     n_1412 +
     mult25_1411 n_1412 (m_1413 - 1)
 in
 let m25_1414 (n_1415:int) (m_1416:int) =
   assert (mult25_1411 m_1416 m_1416 <=
           mult25_1411 n_1415 n_1415)
 in
 let rec mult26_1417 (n_1418:int) 
                    (m_1419:int) =
   if n_1418 <= 0 || m_1419 <= 0
   then
     0
   else
     n_1418 +
     mult26_1417 n_1418 (m_1419 - 1)
 in
 let m26_1420 (n_1421:int) (m_1422:int) =
   assert (n_1421 * 2 <=
           mult26_1417 n_1421 m_1422)
 in
 let make_array27_1423 (n_1424:int) 
                      (i_1425:int) =
   assert (0 <= i_1425 && i_1425 < n_1424);
   0
 in
 let update27_1426 (i_1427:int) 
                  (a_1428:(int -> int)) 
                  (x_1429:int) (j_1430:int) =
   if
     j_1430 > i_1427 - 1 &&
     j_1430 <= i_1427
   then
     x_1429
   else
     a_1428 j_1430
 in
 let rec init27_1431 (i_1432:int) 
                    (n_1433:int) 
                    (a_1434:(int -> int)) =
   if i_1432 >= n_1433
   then
     a_1434
   else
     init27_1431
       (i_1432 + 1) n_1433 
       (update27_1426 i_1432 a_1434 1)
 in
 let m27_1435 (k_1436:int) (n_1437:int) 
             (i_1438:int) =
   if k_1436 >= 0 && k_1436 <= 0
   then
     let x_1439 =
       init27_1431
         k_1436 n_1437 
         (make_array27_1423 n_1437)
     in
     if 0 <= i_1438 && i_1438 < n_1437
     then
       assert (x_1439 i_1438 = 1)
 in
 let rec sum28_1440 (n_1441:int) 
                   (m_1442:int) =
   if n_1441 <= 0
   then
     m_1442
   else
     1 + sum28_1440 (n_1441 - 1) m_1442
 in
 let rec mult_sum_1443 (n_1444:int) 
                      (m_1445:int) =
   if n_1444 <= 0
   then
     0
   else
     if (rand_bool ())
     then
       m_1445
     else
       sum28_1440
         m_1445 
         (mult_sum_1443
           (n_1444 - 1) m_1445)
 in
 let m28_1446 (n_1447:int) (m_1448:int) =
   assert (Pervasives.==_3803
            (mult_sum_1443 n_1447 m_1448) 
            (n_1447 * m_1448))
 in
 let main_1449 (n_1450:int) (m_1451:int) =
   (if n_1450 = 1
    then
      m1_1201 m_1451
    else
      if n_1450 = 2
      then
        m2_1210 m_1451
      else
        if n_1450 = 3
        then
          m3_1218 m_1451
        else
          if n_1450 = 4
          then
            m4_1236 m_1451
          else
            if n_1450 = 5
            then
              m5_1243 m_1451
            else
              if n_1450 = 6
              then
                m6_1251 m_1451
              else
                if n_1450 = 7
                then
                  m7_1258 m_1451
                else
                  if n_1450 = 9
                  then
                    m9_1268
                      m_1451 m_1451 m_1451
                  else
                    if n_1450 = 11
                    then
                      m11_1288 m_1451
                    else
                      if n_1450 = 12
                      then
                        m12_1317 m_1451
                      else
                        if n_1450 = 13
                        then
                          m13_1331 m_1451
                        else
                          if n_1450 = 14
                          then
                            m14_1335 m_1451
                          else
                            if n_1450 = 15
                            then
                              m15_1340
                                m_1451
                            else
                              if
                                n_1450 = 16
                              then
                                m16_1348
                                  m_1451
                              else
                                if
                                  n_1450 =
                                  17
                                then
                                  m17_1360
                                    m_1451
                                else
                                  if
                                    n_1450
                                    = 18
                                  then
                                    m18_1364
                                      m_1451
                                  else
                                    if
                                      n_1450
                                      = 21
                                    then
                                      m21_1378
                                        m_1451 
                                        m_1451 
                                        m_1451
                                    else
                                      if
                                        n_1450
                                        =
                                        23
                                      then
                                        m23_1393
                                          m_1451 
                                          m_1451
                                      else
                                        if
                                          n_1450
                                          =
                                          24
                                        then
                                          m24_1407
                                            m_1451 
                                            m_1451
                                        else
                                          if
                                            n_1450
                                            =
                                            25
                                          then
                                            m25_1414
                                              m_1451 
                                              m_1451
                                          else
                                            if
                                              n_1450
                                              =
                                              26
                                            then
                                              m26_1420
                                                m_1451 
                                                m_1451
                                            else
                                              if
                                                n_1450
                                                =
                                                27
                                              then
                                                m27_1435
                                                  m_1451 
                                                  m_1451 
                                                  m_1451
                                              else
                                                m28_1446
                                                  m_1451 
                                                  m_1451);
   ()
 in
 (let arg1_3280 = rand_int () in
  let arg2_3282 = rand_int () in
  main_1449 arg1_3280 arg2_3282);
 ()

###CPS:
 (let Pervasives.==_3803 (_:int) (_:int) (k_Pervasives.==_6088:(bool -> X)) =
    rand_int_cps () (fun (x_6091:int) -> k_Pervasives.==_6088 (x_6091 = 0))
  in
  let rec copy_1199 (x_1200:int) (k_copy_6110:(int -> X)) =
    if x_1200 = 0 then k_copy_6110 0 else copy_1199 (x_1200 - 1) (fun (x_6114:int) -> k_copy_6110 (1 + x_6114))
  in
  let rec fact_1203 (n_1204:int) (exn_1205:(int -> (int -> X) -> X)) (k_fact_6180:(int -> X)) =
    if n_1204 <= 0
    then
      exn_1205 0 k_fact_6180
    else
      let exn_1206 (n_1207:int) (k_fact_exn_6194:(int -> X)) =
        if n_1207 = 0 then k_fact_exn_6194 1 else exn_1205 n_1207 k_fact_exn_6194
      in
      fact_1203 (n_1204 - 1) exn_1206 (fun (x_6215:int) -> k_fact_6180 (n_1204 * x_6215))
  in
  let exn_3286 (_:int) (_:(int -> X)) = <|fail|> () (fun (():unit) -> _|_) in
  let m2_1210 (n_1211:int) (k_m2_6279:(unit -> X)) =
    if n_1211 > 0 then fact_1203 n_1211 exn_3286 (fun (_:int) -> k_m2_6279 ()) else k_m2_6279 ()
  in
  let f3_1213 (n_1214:int) (k_1215:(int -> (unit -> X) -> X)) (k_f3_6319:(unit -> X)) =
    if n_1214 >= 0 then k_f3_6319 () else k_1215 0 k_f3_6319
  in
  let g3_1216 (n_1217:int) (k_g3_6344:(unit -> X)) =
    if n_1217 = 0 then k_g3_6344 () else <|fail|> () k_g3_6344
  in
  let c4_1220 (_:int) (k_c4_6392:(unit -> X)) = k_c4_6392 () in
  let b4_1222 (x_1223:(int -> (unit -> X) -> X)) (_:int) 
             (k_b4_6402:(unit -> X)) = x_1223 1 k_b4_6402
  in
  let a4_1225 (x_2096:(int -> (unit -> X) -> X)) 
             (x_2100:(int -> (unit -> X) -> X)) (q_1228:int) 
             (k_a4_6429:(unit -> X)) =
    if q_1228 = 0
    then
      x_2096 0 (fun (():unit) -> x_2100 0 k_a4_6429)
    else
      <|fail|> () (fun (():unit) -> _|_)
  in
  let rec f_1229 (n_1230:int) (x_1231:(int -> (unit -> X) -> X)) (q_1232:int) 
                (k_f_6486:(unit -> X)) =
    if n_1230 <= 0
    then
      x_1231 q_1232 k_f_6486
    else
      a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232 k_f_6486
  in
  let h5_1241 (y_1242:int) (k_h5_6619:(unit -> X)) =
    if y_1242 > 0 then k_h5_6619 () else <|fail|> () k_h5_6619
  in
  let m5_1243 (n_1244:int) (k_m5_6637:(unit -> X)) =
    if n_1244 > 0
    then
      h5_1241 (n_1244 + 1) k_m5_6637
    else
      k_m5_6637 ()
  in
  let h6_3285 (z_1249:int) (y_1250:int) (k_h6_6695:(unit -> X)) =
    if y_1250 > z_1249 then k_h6_6695 () else <|fail|> () k_h6_6695
  in
  let m6_1251 (n_1252:int) (k_m6_6714:(unit -> X)) =
    if n_1252 >= 0
    then
      (h6_3285 n_1252) (n_1252 + 1) k_m6_6714
    else
      k_m6_6714 ()
  in
  let rec zip_1253 (x_1254:int) (y_1255:int) 
                  (k_zip_6749:(int -> X)) =
    if x_1254 = 0
    then
      if y_1255 = 0
      then
        k_zip_6749 x_1254
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1255 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip_1253
          (x_1254 - 1) (y_1255 - 1) 
          (fun (x_6781:int) -> k_zip_6749 (1 + x_6781))
  in
  let rec map_1256 (x_1257:int) (k_map_6808:(int -> X)) =
    if x_1257 = 0
    then
      k_map_6808 x_1257
    else
      map_1256
        (x_1257 - 1) 
        (fun (x_6812:int) -> k_map_6808 (1 + x_6812))
  in
  let f9_1265 (x_1266:int) (y_1267:int) (k_f9_6927:(int -> X)) =
    if x_1266 >= y_1267
    then
      k_f9_6927 x_1266
    else
      k_f9_6927 y_1267
  in
  let f8_1273 (g_1274:(int -> int -> (int -> X) -> X)) 
             (x_1275:int) (y_1276:int) (k_f8_7002:(int -> X)) =
    g_1274 (x_1275 + 1) (y_1276 + 1) k_f8_7002
  in
  let rec unzip8_1277 (x_1278:int) 
                     (k_1279:(int -> int -> (int -> X) -> X)) 
                     (k_unzip8_7030:(int -> X)) =
    if x_1278 = 0
    then
      k_1279 0 0 k_unzip8_7030
    else
      unzip8_1277 (x_1278 - 1) (f8_1273 k_1279) k_unzip8_7030
  in
  let rec zip8_1280 (x_1281:int) (y_1282:int) 
                   (k_zip8_7093:(int -> X)) =
    if x_1281 = 0
    then
      if y_1282 = 0
      then
        k_zip8_7093 0
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1282 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip8_1280
          (x_1281 - 1) (y_1282 - 1) 
          (fun (x_7125:int) -> k_zip8_7093 (1 + x_7125))
  in
  let rec mult_1285 (n_1286:int) (m_1287:int) 
                   (k_mult_7152:(int -> X)) =
    if n_1286 <= 0 || m_1287 <= 0
    then
      k_mult_7152 0
    else
      mult_1285
        n_1286 (m_1287 - 1) 
        (fun (x_7156:int) -> k_mult_7152 (n_1286 + x_7156))
  in
  let make_array_1290 (n_1291:int) (i_1292:int) 
                     (k_make_array_7212:(int -> X)) =
    let u_2417 (k_make_array_u_7223:(unit -> X)) =
      if 0 <= i_1292 && i_1292 < n_1291
      then
        k_make_array_u_7223 ()
      else
        <|fail|> () k_make_array_u_7223
    in
    u_2417 (fun (():unit) -> k_make_array_7212 0)
  in
  let f20_1302 (x_2463:int) (src_1304:(int -> (int -> X) -> X)) 
              (des_1305:(int -> (int -> X) -> X)) 
              (k_f20_7307:(unit -> X)) =
    let rec bcopy_1306 (des_1309:(int -> (int -> X) -> X)) 
                      (i_1310:int) 
                      (k_f20_bcopy_7317:((int ->
                                            (int -> X) -> X) ->
                                           X)) =
      if i_1310 >= x_2463
      then
        k_f20_bcopy_7317 des_1309
      else
        src_1304
          i_1310 
          (fun (x_7363:int) ->
             des_1309
               i_1310 
               (fun (_:int) ->
                  (fun (des_7396:(int -> (int -> X) -> X)) ->
                     bcopy_1306
                       des_7396 (i_1310 + 1) k_f20_bcopy_7317)
                    (let a_1298 (j_1299:int) 
                               (k_update_a_7260:(int -> X)) =
                       if i_1310 = j_1299
                       then
                         k_update_a_7260 x_7363
                       else
                         des_1309 i_1310 k_update_a_7260
                     in
                     a_1298)))
    in
    let rec print_array_1312 (x_2536:(int -> (int -> X) -> X)) 
                            (i_1315:int) 
                            (k_f20_print_array_7420:(unit -> X)) =
      if i_1315 >= x_2463
      then
        k_f20_print_array_7420 ()
      else
        des_1305
          i_1315 
          (fun (_:int) ->
             (fun (():unit) ->
                print_array_1312
                  x_2536 (i_1315 + 1) k_f20_print_array_7420)
               ())
    in
    bcopy_1306
      des_1305 0 
      (fun (array_7523:(int -> (int -> X) -> X)) ->
         print_array_1312 array_7523 0 k_f20_7307)
  in
  let m12_1317 (n_1318:int) (k_m12_7557:(unit -> X)) =
    if n_1318 > 0
    then
      f20_1302
        n_1318 (make_array_1290 n_1318) 
        (make_array_1290 n_1318) k_m12_7557
    else
      k_m12_7557 ()
  in
  let lock_1321 (st_1322:int) (k_lock_7624:(int -> X)) =
    let u_2593 (k_lock_u_7635:(unit -> X)) =
      if st_1322 = 0
      then
        k_lock_u_7635 ()
      else
        <|fail|> () k_lock_u_7635
    in
    u_2593 (fun (():unit) -> k_lock_7624 1)
  in
  let unlock_1323 (st_1324:int) (k_unlock_7645:(int -> X)) =
    let u_2598 (k_unlock_u_7656:(unit -> X)) =
      if st_1324 = 1
      then
        k_unlock_u_7656 ()
      else
        <|fail|> () k_unlock_u_7656
    in
    u_2598 (fun (():unit) -> k_unlock_7645 0)
  in
  let f13_1325 (n_1326:int) (st_1327:int) 
              (k_f13_7666:(int -> X)) =
    if n_1326 > 0
    then
      lock_1321 st_1327 k_f13_7666
    else
      k_f13_7666 st_1327
  in
  let g13_1328 (n_1329:int) (st_1330:int) 
              (k_g13_7688:(int -> X)) =
    if n_1329 > 0
    then
      unlock_1323 st_1330 k_g13_7688
    else
      k_g13_7688 st_1330
  in
  let rec sum_1333 (n_1334:int) (k_sum_7754:(int -> X)) =
    if n_1334 <= 0
    then
      k_sum_7754 0
    else
      sum_1333
        (n_1334 - 1) 
        (fun (x_7758:int) -> k_sum_7754 (n_1334 + x_7758))
  in
  let rec mult_1337 (n_1338:int) (m_1339:int) 
                   (k_mult_7811:(int -> X)) =
    if n_1338 <= 0 || m_1339 <= 0
    then
      k_mult_7811 0
    else
      mult_1337
        n_1338 (m_1339 - 1) 
        (fun (x_7815:int) -> k_mult_7811 (n_1338 + x_7815))
  in
  let succ_1342 (x_1343:int) (k_succ_7871:(int -> X)) =
    k_succ_7871 (x_1343 + 1)
  in
  let rec repeat_1344 (x_2673:(int -> (int -> X) -> X)) 
                     (n_1346:int) (s_1347:int) 
                     (k_repeat_7881:(int -> X)) =
    if n_1346 = 0
    then
      k_repeat_7881 s_1347
    else
      repeat_1344
        x_2673 (n_1346 - 1) s_1347 
        (fun (x_7909:int) -> x_2673 x_7909 k_repeat_7881)
  in
  let lock_1350 (st_1351:int) (k_lock_7965:(int -> X)) =
    let u_2702 (k_lock_u_7976:(unit -> X)) =
      if st_1351 = 0
      then
        k_lock_u_7976 ()
      else
        <|fail|> () k_lock_u_7976
    in
    u_2702 (fun (():unit) -> k_lock_7965 1)
  in
  let unlock_1352 (st_1353:int) (k_unlock_7986:(int -> X)) =
    let u_2707 (k_unlock_u_7997:(unit -> X)) =
      if st_1353 = 1
      then
        k_unlock_u_7997 ()
      else
        <|fail|> () k_unlock_u_7997
    in
    u_2707 (fun (():unit) -> k_unlock_7986 0)
  in
  let f17_1354 (n_1355:int) (st_1356:int) 
              (k_f17_8007:(int -> X)) =
    if n_1355 > 0
    then
      lock_1350 st_1356 k_f17_8007
    else
      k_f17_8007 st_1356
  in
  let g17_1357 (n_1358:int) (st_1359:int) 
              (k_g17_8029:(int -> X)) =
    if n_1358 >= 0
    then
      unlock_1352 st_1359 k_g17_8029
    else
      k_g17_8029 st_1359
  in
  let rec sum_1362 (n_1363:int) (k_sum_8095:(int -> X)) =
    if n_1363 <= 0
    then
      k_sum_8095 0
    else
      sum_1362
        (n_1363 - 1) 
        (fun (x_8099:int) -> k_sum_8095 (n_1363 + x_8099))
  in
  let make_array21_1366 (n_1367:int) (i_1368:int) 
                       (k_make_array21_8152:(int -> X)) =
    let u_2759 (k_make_array21_u_8163:(unit -> X)) =
      if 0 <= i_1368 && i_1368 < n_1367
      then
        k_make_array21_u_8163 ()
      else
        <|fail|> () k_make_array21_u_8163
    in
    u_2759 (fun (():unit) -> k_make_array21_8152 0)
  in
  let update21_1369 (i_1370:int) 
                   (a_1371:(int -> (int -> X) -> X)) 
                   (x_1372:int) (j_1373:int) 
                   (k_update21_8177:(int -> X)) =
    if j_1373 > i_1370 - 1 && j_1373 <= i_1370
    then
      k_update21_8177 x_1372
    else
      a_1371 j_1373 k_update21_8177
  in
  let rec init_1374 (i_1375:int) (n_1376:int) 
                   (a_1377:(int -> (int -> X) -> X)) 
                   (k_init_8210:((int -> (int -> X) -> X) -> X)) =
    if i_1375 >= n_1376
    then
      k_init_8210 a_1377
    else
      init_1374
        (i_1375 + 1) n_1376 (update21_1369 i_1375 a_1377 1) 
        k_init_8210
  in
  let m21_1378 (k_1379:int) (n_1380:int) (i_1381:int) 
              (k_m21_8277:(unit -> X)) =
    if k_1379 >= 0 && k_1379 <= 0
    then
      init_1374
        k_1379 n_1380 (make_array21_1366 n_1380) 
        (fun (x_8349:(int -> (int -> X) -> X)) ->
           if 0 <= i_1381 && i_1381 < n_1380
           then
             x_8349
               i_1381 
               (fun (x_8319:int) ->
                  if x_8319 >= 1
                  then
                    k_m21_8277 ()
                  else
                    <|fail|> () k_m21_8277)
           else
             k_m21_8277 ())
    else
      k_m21_8277 ()
  in
  let make_array23_1383 (n_1384:int) (i_1385:int) 
                       (k_make_array23_8362:(int -> X)) =
    k_make_array23_8362 (n_1384 - i_1385)
  in
  let rec array_max23_1386 (x_2875:int) (i_1388:int) 
                          (x_2882:(int -> (int -> X) -> X)) 
                          (m_1390:int) 
                          (k_array_max23_8373:(int -> X)) =
    if i_1388 >= x_2875
    then
      k_array_max23_8373 m_1390
    else
      x_2882
        i_1388 
        (fun (x_8412:int) ->
           let z_1392 (k_array_max23_z_8389:(int -> X)) =
             if x_8412 > m_1390
             then
               k_array_max23_z_8389 x_8412
             else
               k_array_max23_z_8389 m_1390
           in
           z_1392
             (fun (z_8411:int) ->
                array_max23_1386
                  x_2875 (i_1388 + 1) x_2882 z_8411 
                  k_array_max23_8373))
  in
  let m23_1393 (n_1394:int) (i_1395:int) 
              (k_m23_8429:(unit -> X)) =
    if n_1394 > 0 && (i_1395 >= 0 && i_1395 <= 0)
    then
      array_max23_1386
        n_1394 i_1395 (make_array23_1383 n_1394) (-1) 
        (fun (m_8463:int) ->
           if m_8463 >= n_1394
           then
             k_m23_8429 ()
           else
             <|fail|> () k_m23_8429)
    else
      k_m23_8429 ()
  in
  let make_array24_1397 (n_1398:int) (i_1399:int) 
                       (k_make_array24_8475:(int -> X)) =
    k_make_array24_8475 (n_1398 - i_1399)
  in
  let rec array_max24_1400 (x_2940:int) (i_1402:int) 
                          (x_2947:(int -> (int -> X) -> X)) 
                          (m_1404:int) 
                          (k_array_max24_8486:(int -> X)) =
    if i_1402 >= x_2940
    then
      k_array_max24_8486 m_1404
    else
      x_2947
        i_1402 
        (fun (x_8525:int) ->
           let z_1406 (k_array_max24_z_8502:(int -> X)) =
             if x_8525 > m_1404
             then
               k_array_max24_z_8502 x_8525
             else
               k_array_max24_z_8502 m_1404
           in
           z_1406
             (fun (z_8524:int) ->
                array_max24_1400
                  x_2940 (i_1402 + 1) x_2947 z_8524 
                  k_array_max24_8486))
  in
  let m24_1407 (n_1408:int) (i_1409:int) 
              (k_m24_8542:(unit -> X)) =
    if n_1408 > 0 && (i_1409 >= 0 && i_1409 <= 0)
    then
      array_max24_1400
        n_1408 i_1409 (make_array24_1397 n_1408) (-1) 
        (fun (m_8576:int) ->
           if m_8576 <> n_1408
           then
             k_m24_8542 ()
           else
             <|fail|> () k_m24_8542)
    else
      k_m24_8542 ()
  in
  let rec mult25_1411 (n_1412:int) (m_1413:int) 
                     (k_mult25_8588:(int -> X)) =
    if n_1412 <= 0 || m_1413 <= 0
    then
      k_mult25_8588 0
    else
      mult25_1411
        n_1412 (m_1413 - 1) 
        (fun (x_8592:int) -> k_mult25_8588 (n_1412 + x_8592))
  in
  let rec mult26_1417 (n_1418:int) (m_1419:int) 
                     (k_mult26_8660:(int -> X)) =
    if n_1418 <= 0 || m_1419 <= 0
    then
      k_mult26_8660 0
    else
      mult26_1417
        n_1418 (m_1419 - 1) 
        (fun (x_8664:int) -> k_mult26_8660 (n_1418 + x_8664))
  in
  let make_array27_1423 (n_1424:int) (i_1425:int) 
                       (k_make_array27_8721:(int -> X)) =
    let u_3057 (k_make_array27_u_8732:(unit -> X)) =
      if 0 <= i_1425 && i_1425 < n_1424
      then
        k_make_array27_u_8732 ()
      else
        <|fail|> () k_make_array27_u_8732
    in
    u_3057 (fun (():unit) -> k_make_array27_8721 0)
  in
  let update27_1426 (i_1427:int) 
                   (a_1428:(int -> (int -> X) -> X)) 
                   (x_1429:int) (j_1430:int) 
                   (k_update27_8746:(int -> X)) =
    if j_1430 > i_1427 - 1 && j_1430 <= i_1427
    then
      k_update27_8746 x_1429
    else
      a_1428 j_1430 k_update27_8746
  in
  let rec init27_1431 (i_1432:int) (n_1433:int) 
                     (a_1434:(int -> (int -> X) -> X)) 
                     (k_init27_8779:((int -> (int -> X) -> X) ->
                                       X)) =
    if i_1432 >= n_1433
    then
      k_init27_8779 a_1434
    else
      init27_1431
        (i_1432 + 1) n_1433 (update27_1426 i_1432 a_1434 1) 
        k_init27_8779
  in
  let m27_1435 (k_1436:int) (n_1437:int) (i_1438:int) 
              (k_m27_8846:(unit -> X)) =
    if k_1436 >= 0 && k_1436 <= 0
    then
      init27_1431
        k_1436 n_1437 (make_array27_1423 n_1437) 
        (fun (x_8918:(int -> (int -> X) -> X)) ->
           if 0 <= i_1438 && i_1438 < n_1437
           then
             x_8918
               i_1438 
               (fun (x_8888:int) ->
                  if x_8888 = 1
                  then
                    k_m27_8846 ()
                  else
                    <|fail|> () k_m27_8846)
           else
             k_m27_8846 ())
    else
      k_m27_8846 ()
  in
  let rec sum28_1440 (n_1441:int) (m_1442:int) 
                    (k_sum28_8931:(int -> X)) =
    if n_1441 <= 0
    then
      k_sum28_8931 m_1442
    else
      sum28_1440
        (n_1441 - 1) m_1442 
        (fun (x_8935:int) -> k_sum28_8931 (1 + x_8935))
  in
  let rec mult_sum_1443 (n_1444:int) (m_1445:int) 
                       (k_mult_sum_8958:(int -> X)) =
    if n_1444 <= 0
    then
      k_mult_sum_8958 0
    else
      rand_int_cps
        () 
        (fun (x_8961:int) ->
           if x_8961 = 0
           then
             k_mult_sum_8958 m_1445
           else
             mult_sum_1443
               (n_1444 - 1) m_1445 
               (fun (x_8994:int) ->
                  sum28_1440 m_1445 x_8994 k_mult_sum_8958))
  in
  let main_1449 (n_1450:int) (m_1451:int) 
               (k_main_9062:(unit -> X)) =
    let u_3279 (k_main_u_9391:(unit -> X)) =
      if n_1450 = 1
      then
        copy_1199
          m_1451 
          (fun (x_6159:int) ->
             copy_1199
               x_6159 
               (fun (x_6138:int) ->
                  if x_6138 = m_1451
                  then
                    k_main_u_9391 ()
                  else
                    <|fail|> () k_main_u_9391))
      else
        if n_1450 = 2
        then
          m2_1210 m_1451 k_main_u_9391
        else
          if n_1450 = 3
          then
            f3_1213 m_1451 g3_1216 k_main_u_9391
          else
            if n_1450 = 4
            then
              f_1229 m_1451 c4_1220 0 k_main_u_9391
            else
              if n_1450 = 5
              then
                m5_1243 m_1451 k_main_u_9391
              else
                if n_1450 = 6
                then
                  m6_1251 m_1451 k_main_u_9391
                else
                  if n_1450 = 7
                  then
                    zip_1253
                      m_1451 m_1451 
                      (fun (x_6858:int) ->
                         map_1256
                           x_6858 
                           (fun (x_6836:int) ->
                              if x_6836 = m_1451
                              then
                                k_main_u_9391 ()
                              else
                                <|fail|> () k_main_u_9391))
                  else
                    if n_1450 = 9
                    then
                      f9_1265
                        m_1451 m_1451 
                        (fun (x_6906:int) ->
                           f9_1265
                             x_6906 m_1451 
                             (fun (m_6989:int) ->
                                f9_1265
                                  m_1451 m_6989 
                                  (fun (x_6965:int) ->
                                     if x_6965 = m_6989
                                     then
                                       k_main_u_9391 ()
                                     else
                                       <|fail|>
                                         () k_main_u_9391)))
                    else
                      if n_1450 = 11
                      then
                        mult_1285
                          m_1451 m_1451 
                          (fun (x_7183:int) ->
                             if m_1451 <= x_7183
                             then
                               k_main_u_9391 ()
                             else
                               <|fail|> () k_main_u_9391)
                      else
                        if n_1450 = 12
                        then
                          m12_1317 m_1451 k_main_u_9391
                        else
                          if n_1450 = 13
                          then
                            f13_1325
                              m_1451 0 
                              (fun (x_7736:int) ->
                                 g13_1328
                                   m_1451 x_7736 
                                   (fun (x_7713:int) ->
                                      if x_7713 = 0
                                      then
                                        k_main_u_9391 ()
                                      else
                                        <|fail|>
                                          () k_main_u_9391))
                          else
                            if n_1450 = 14
                            then
                              sum_1333
                                m_1451 
                                (fun (x_7783:int) ->
                                   if m_1451 <= x_7783
                                   then
                                     k_main_u_9391 ()
                                   else
                                     <|fail|> () k_main_u_9391)
                            else
                              if n_1450 = 15
                              then
                                mult_1337
                                  m_1451 m_1451 
                                  (fun (x_7842:int) ->
                                     if m_1451 + 1 <= x_7842
                                     then
                                       k_main_u_9391 ()
                                     else
                                       <|fail|>
                                         () k_main_u_9391)
                              else
                                if n_1450 = 16
                                then
                                  repeat_1344
                                    succ_1342 m_1451 0 
                                    (fun (x_7928:int) ->
                                       if x_7928 > m_1451
                                       then
                                         k_main_u_9391 ()
                                       else
                                         <|fail|>
                                           () k_main_u_9391)
                                else
                                  if n_1450 = 17
                                  then
                                    f17_1354
                                      m_1451 0 
                                      (fun (x_8077:int) ->
                                         g17_1357
                                           m_1451 x_8077 
                                           (fun (x_8054:int) ->
                                              if x_8054 = 0
                                              then
                                                k_main_u_9391
                                                  ()
                                              else
                                                <|fail|>
                                                  () 
                                                  k_main_u_9391))
                                  else
                                    if n_1450 = 18
                                    then
                                      sum_1362
                                        m_1451 
                                        (fun (x_8124:int) ->
                                           if
                                             m_1451 + 1 <=
                                             x_8124
                                           then
                                             k_main_u_9391 ()
                                           else
                                             <|fail|>
                                               () k_main_u_9391)
                                    else
                                      if n_1450 = 21
                                      then
                                        m21_1378
                                          m_1451 m_1451 m_1451 
                                          k_main_u_9391
                                      else
                                        if n_1450 = 23
                                        then
                                          m23_1393
                                            m_1451 m_1451 
                                            k_main_u_9391
                                        else
                                          if n_1450 = 24
                                          then
                                            m24_1407
                                              m_1451 m_1451 
                                              k_main_u_9391
                                          else
                                            if n_1450 = 25
                                            then
                                              mult25_1411
                                                m_1451 m_1451 
                                                (fun
                                                    (x_8618:int) ->
                                                   mult25_1411
                                                     m_1451 
                                                     m_1451 
                                                     (fun
                                                         (x_8619:int) ->
                                                        if
                                                          x_8618
                                                          <=
                                                          x_8619
                                                        then
                                                          k_main_u_9391
                                                            ()
                                                        else
                                                          <|fail|>
                                                            () 
                                                            k_main_u_9391))
                                            else
                                              if n_1450 = 26
                                              then
                                                mult26_1417
                                                  m_1451 m_1451 
                                                  (fun
                                                      (x_8691:int) ->
                                                     if
                                                       m_1451 *
                                                       2 <=
                                                       x_8691
                                                     then
                                                       k_main_u_9391
                                                         ()
                                                     else
                                                       <|fail|>
                                                         () 
                                                         k_main_u_9391)
                                              else
                                                if n_1450 = 27
                                                then
                                                  m27_1435
                                                    m_1451 
                                                    m_1451 
                                                    m_1451 
                                                    k_main_u_9391
                                                else
                                                  mult_sum_1443
                                                    m_1451 
                                                    m_1451 
                                                    (fun
                                                        (x_9036:int) ->
                                                       Pervasives.==_3803
                                                         x_9036 
                                                         (m_1451
                                                          *
                                                          m_1451)
                                                         (fun
                                                             (x_9054:
                                                              bool) ->
                                                            if
                                                              x_9054
                                                            then
                                                              k_main_u_9391
                                                                ()
                                                            else
                                                              <|fail|>
                                                                () 
                                                                k_main_u_9391))
    in
    u_3279 (fun (():unit) -> k_main_9062 ())
  in
  let main_3284 (k_main_9402:(unit -> X)) =
    let arg1_3280 (k_main_arg1_9407:(int -> X)) =
      rand_int_cps () k_main_arg1_9407
    in
    arg1_3280
      (fun (arg1_9437:int) ->
         let arg2_3282 (k_main_arg2_9419:(int -> X)) =
           rand_int_cps () k_main_arg2_9419
         in
         arg2_3282
           (fun (arg2_9436:int) ->
              main_1449 arg1_9437 arg2_9436 k_main_9402))
  in
  main_3284 (fun (():unit) -> {end}) # [ACPS])

###Remove_pair:
 (let Pervasives.==_3803 (_:int) (_:int) (k_Pervasives.==_6088:(bool -> X)) =
    rand_int_cps () (fun (x_6091:int) -> k_Pervasives.==_6088 (x_6091 = 0))
  in
  let rec copy_1199 (x_1200:int) (k_copy_6110:(int -> X)) =
    if x_1200 = 0 then k_copy_6110 0 else copy_1199 (x_1200 - 1) (fun (x_6114:int) -> k_copy_6110 (1 + x_6114))
  in
  let rec fact_1203 (n_1204:int) (exn_1205:(int -> (int -> X) -> X)) (k_fact_6180:(int -> X)) =
    if n_1204 <= 0
    then
      exn_1205 0 k_fact_6180
    else
      let exn_1206 (n_1207:int) (k_fact_exn_6194:(int -> X)) =
        if n_1207 = 0 then k_fact_exn_6194 1 else exn_1205 n_1207 k_fact_exn_6194
      in
      fact_1203 (n_1204 - 1) exn_1206 (fun (x_6215:int) -> k_fact_6180 (n_1204 * x_6215))
  in
  let exn_3286 (_:int) (_:(int -> X)) = <|fail|> () (fun (():unit) -> _|_) in
  let m2_1210 (n_1211:int) (k_m2_6279:(unit -> X)) =
    if n_1211 > 0 then fact_1203 n_1211 exn_3286 (fun (_:int) -> k_m2_6279 ()) else k_m2_6279 ()
  in
  let f3_1213 (n_1214:int) (k_1215:(int -> (unit -> X) -> X)) (k_f3_6319:(unit -> X)) =
    if n_1214 >= 0 then k_f3_6319 () else k_1215 0 k_f3_6319
  in
  let g3_1216 (n_1217:int) (k_g3_6344:(unit -> X)) =
    if n_1217 = 0 then k_g3_6344 () else <|fail|> () k_g3_6344
  in
  let c4_1220 (_:int) (k_c4_6392:(unit -> X)) = k_c4_6392 () in
  let b4_1222 (x_1223:(int -> (unit -> X) -> X)) (_:int) 
             (k_b4_6402:(unit -> X)) = x_1223 1 k_b4_6402
  in
  let a4_1225 (x_2096:(int -> (unit -> X) -> X)) 
             (x_2100:(int -> (unit -> X) -> X)) (q_1228:int) 
             (k_a4_6429:(unit -> X)) =
    if q_1228 = 0
    then
      x_2096 0 (fun (():unit) -> x_2100 0 k_a4_6429)
    else
      <|fail|> () (fun (():unit) -> _|_)
  in
  let rec f_1229 (n_1230:int) (x_1231:(int -> (unit -> X) -> X)) (q_1232:int) 
                (k_f_6486:(unit -> X)) =
    if n_1230 <= 0
    then
      x_1231 q_1232 k_f_6486
    else
      a4_1225 x_1231 (f_1229 (n_1230 - 1) (b4_1222 x_1231)) q_1232 k_f_6486
  in
  let h5_1241 (y_1242:int) (k_h5_6619:(unit -> X)) =
    if y_1242 > 0 then k_h5_6619 () else <|fail|> () k_h5_6619
  in
  let m5_1243 (n_1244:int) (k_m5_6637:(unit -> X)) =
    if n_1244 > 0
    then
      h5_1241 (n_1244 + 1) k_m5_6637
    else
      k_m5_6637 ()
  in
  let h6_3285 (z_1249:int) (y_1250:int) (k_h6_6695:(unit -> X)) =
    if y_1250 > z_1249 then k_h6_6695 () else <|fail|> () k_h6_6695
  in
  let m6_1251 (n_1252:int) (k_m6_6714:(unit -> X)) =
    if n_1252 >= 0
    then
      h6_3285 n_1252 (n_1252 + 1) k_m6_6714
    else
      k_m6_6714 ()
  in
  let rec zip_1253 (x_1254:int) (y_1255:int) 
                  (k_zip_6749:(int -> X)) =
    if x_1254 = 0
    then
      if y_1255 = 0
      then
        k_zip_6749 x_1254
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1255 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip_1253
          (x_1254 - 1) (y_1255 - 1) 
          (fun (x_6781:int) -> k_zip_6749 (1 + x_6781))
  in
  let rec map_1256 (x_1257:int) (k_map_6808:(int -> X)) =
    if x_1257 = 0
    then
      k_map_6808 x_1257
    else
      map_1256
        (x_1257 - 1) 
        (fun (x_6812:int) -> k_map_6808 (1 + x_6812))
  in
  let f9_1265 (x_1266:int) (y_1267:int) (k_f9_6927:(int -> X)) =
    if x_1266 >= y_1267
    then
      k_f9_6927 x_1266
    else
      k_f9_6927 y_1267
  in
  let f8_1273 (g_1274:(int -> int -> (int -> X) -> X)) 
             (x_1275:int) (y_1276:int) (k_f8_7002:(int -> X)) =
    g_1274 (x_1275 + 1) (y_1276 + 1) k_f8_7002
  in
  let rec unzip8_1277 (x_1278:int) 
                     (k_1279:(int -> int -> (int -> X) -> X)) 
                     (k_unzip8_7030:(int -> X)) =
    if x_1278 = 0
    then
      k_1279 0 0 k_unzip8_7030
    else
      unzip8_1277 (x_1278 - 1) (f8_1273 k_1279) k_unzip8_7030
  in
  let rec zip8_1280 (x_1281:int) (y_1282:int) 
                   (k_zip8_7093:(int -> X)) =
    if x_1281 = 0
    then
      if y_1282 = 0
      then
        k_zip8_7093 0
      else
        <|fail|> () (fun (():unit) -> _|_)
    else
      if y_1282 = 0
      then
        <|fail|> () (fun (():unit) -> _|_)
      else
        zip8_1280
          (x_1281 - 1) (y_1282 - 1) 
          (fun (x_7125:int) -> k_zip8_7093 (1 + x_7125))
  in
  let rec mult_1285 (n_1286:int) (m_1287:int) 
                   (k_mult_7152:(int -> X)) =
    if n_1286 <= 0 || m_1287 <= 0
    then
      k_mult_7152 0
    else
      mult_1285
        n_1286 (m_1287 - 1) 
        (fun (x_7156:int) -> k_mult_7152 (n_1286 + x_7156))
  in
  let make_array_1290 (n_1291:int) (i_1292:int) 
                     (k_make_array_7212:(int -> X)) =
    let u_2417 (k_make_array_u_7223:(unit -> X)) =
      if 0 <= i_1292 && i_1292 < n_1291
      then
        k_make_array_u_7223 ()
      else
        <|fail|> () k_make_array_u_7223
    in
    u_2417 (fun (():unit) -> k_make_array_7212 0)
  in
  let f20_1302 (x_2463:int) (src_1304:(int -> (int -> X) -> X)) 
              (des_1305:(int -> (int -> X) -> X)) 
              (k_f20_7307:(unit -> X)) =
    let rec bcopy_1306 (des_1309:(int -> (int -> X) -> X)) 
                      (i_1310:int) 
                      (k_f20_bcopy_7317:((int ->
                                            (int -> X) -> X) ->
                                           X)) =
      if i_1310 >= x_2463
      then
        k_f20_bcopy_7317 des_1309
      else
        src_1304
          i_1310 
          (fun (x_7363:int) ->
             des_1309
               i_1310 
               (fun (_:int) ->
                  (fun (des_7396:(int -> (int -> X) -> X)) ->
                     bcopy_1306
                       des_7396 (i_1310 + 1) k_f20_bcopy_7317)
                    (let a_1298 (j_1299:int) 
                               (k_update_a_7260:(int -> X)) =
                       if i_1310 = j_1299
                       then
                         k_update_a_7260 x_7363
                       else
                         des_1309 i_1310 k_update_a_7260
                     in
                     a_1298)))
    in
    let rec print_array_1312 (x_2536:(int -> (int -> X) -> X)) 
                            (i_1315:int) 
                            (k_f20_print_array_7420:(unit -> X)) =
      if i_1315 >= x_2463
      then
        k_f20_print_array_7420 ()
      else
        des_1305
          i_1315 
          (fun (_:int) ->
             print_array_1312
               x_2536 (i_1315 + 1) k_f20_print_array_7420)
    in
    bcopy_1306
      des_1305 0 
      (fun (array_7523:(int -> (int -> X) -> X)) ->
         print_array_1312 array_7523 0 k_f20_7307)
  in
  let m12_1317 (n_1318:int) (k_m12_7557:(unit -> X)) =
    if n_1318 > 0
    then
      f20_1302
        n_1318 (make_array_1290 n_1318) 
        (make_array_1290 n_1318) k_m12_7557
    else
      k_m12_7557 ()
  in
  let lock_1321 (st_1322:int) (k_lock_7624:(int -> X)) =
    let u_2593 (k_lock_u_7635:(unit -> X)) =
      if st_1322 = 0
      then
        k_lock_u_7635 ()
      else
        <|fail|> () k_lock_u_7635
    in
    u_2593 (fun (():unit) -> k_lock_7624 1)
  in
  let unlock_1323 (st_1324:int) (k_unlock_7645:(int -> X)) =
    let u_2598 (k_unlock_u_7656:(unit -> X)) =
      if st_1324 = 1
      then
        k_unlock_u_7656 ()
      else
        <|fail|> () k_unlock_u_7656
    in
    u_2598 (fun (():unit) -> k_unlock_7645 0)
  in
  let f13_1325 (n_1326:int) (st_1327:int) 
              (k_f13_7666:(int -> X)) =
    if n_1326 > 0
    then
      lock_1321 st_1327 k_f13_7666
    else
      k_f13_7666 st_1327
  in
  let g13_1328 (n_1329:int) (st_1330:int) 
              (k_g13_7688:(int -> X)) =
    if n_1329 > 0
    then
      unlock_1323 st_1330 k_g13_7688
    else
      k_g13_7688 st_1330
  in
  let rec sum_1333 (n_1334:int) (k_sum_7754:(int -> X)) =
    if n_1334 <= 0
    then
      k_sum_7754 0
    else
      sum_1333
        (n_1334 - 1) 
        (fun (x_7758:int) -> k_sum_7754 (n_1334 + x_7758))
  in
  let rec mult_1337 (n_1338:int) (m_1339:int) 
                   (k_mult_7811:(int -> X)) =
    if n_1338 <= 0 || m_1339 <= 0
    then
      k_mult_7811 0
    else
      mult_1337
        n_1338 (m_1339 - 1) 
        (fun (x_7815:int) -> k_mult_7811 (n_1338 + x_7815))
  in
  let succ_1342 (x_1343:int) (k_succ_7871:(int -> X)) =
    k_succ_7871 (x_1343 + 1)
  in
  let rec repeat_1344 (x_2673:(int -> (int -> X) -> X)) 
                     (n_1346:int) (s_1347:int) 
                     (k_repeat_7881:(int -> X)) =
    if n_1346 = 0
    then
      k_repeat_7881 s_1347
    else
      repeat_1344
        x_2673 (n_1346 - 1) s_1347 
        (fun (x_7909:int) -> x_2673 x_7909 k_repeat_7881)
  in
  let lock_1350 (st_1351:int) (k_lock_7965:(int -> X)) =
    let u_2702 (k_lock_u_7976:(unit -> X)) =
      if st_1351 = 0
      then
        k_lock_u_7976 ()
      else
        <|fail|> () k_lock_u_7976
    in
    u_2702 (fun (():unit) -> k_lock_7965 1)
  in
  let unlock_1352 (st_1353:int) (k_unlock_7986:(int -> X)) =
    let u_2707 (k_unlock_u_7997:(unit -> X)) =
      if st_1353 = 1
      then
        k_unlock_u_7997 ()
      else
        <|fail|> () k_unlock_u_7997
    in
    u_2707 (fun (():unit) -> k_unlock_7986 0)
  in
  let f17_1354 (n_1355:int) (st_1356:int) 
              (k_f17_8007:(int -> X)) =
    if n_1355 > 0
    then
      lock_1350 st_1356 k_f17_8007
    else
      k_f17_8007 st_1356
  in
  let g17_1357 (n_1358:int) (st_1359:int) 
              (k_g17_8029:(int -> X)) =
    if n_1358 >= 0
    then
      unlock_1352 st_1359 k_g17_8029
    else
      k_g17_8029 st_1359
  in
  let rec sum_1362 (n_1363:int) (k_sum_8095:(int -> X)) =
    if n_1363 <= 0
    then
      k_sum_8095 0
    else
      sum_1362
        (n_1363 - 1) 
        (fun (x_8099:int) -> k_sum_8095 (n_1363 + x_8099))
  in
  let make_array21_1366 (n_1367:int) (i_1368:int) 
                       (k_make_array21_8152:(int -> X)) =
    let u_2759 (k_make_array21_u_8163:(unit -> X)) =
      if 0 <= i_1368 && i_1368 < n_1367
      then
        k_make_array21_u_8163 ()
      else
        <|fail|> () k_make_array21_u_8163
    in
    u_2759 (fun (():unit) -> k_make_array21_8152 0)
  in
  let update21_1369 (i_1370:int) 
                   (a_1371:(int -> (int -> X) -> X)) 
                   (x_1372:int) (j_1373:int) 
                   (k_update21_8177:(int -> X)) =
    if j_1373 > i_1370 - 1 && j_1373 <= i_1370
    then
      k_update21_8177 x_1372
    else
      a_1371 j_1373 k_update21_8177
  in
  let rec init_1374 (i_1375:int) (n_1376:int) 
                   (a_1377:(int -> (int -> X) -> X)) 
                   (k_init_8210:((int -> (int -> X) -> X) -> X)) =
    if i_1375 >= n_1376
    then
      k_init_8210 a_1377
    else
      init_1374
        (i_1375 + 1) n_1376 (update21_1369 i_1375 a_1377 1) 
        k_init_8210
  in
  let m21_1378 (k_1379:int) (n_1380:int) (i_1381:int) 
              (k_m21_8277:(unit -> X)) =
    if k_1379 >= 0 && k_1379 <= 0
    then
      init_1374
        k_1379 n_1380 (make_array21_1366 n_1380) 
        (fun (x_8349:(int -> (int -> X) -> X)) ->
           if 0 <= i_1381 && i_1381 < n_1380
           then
             x_8349
               i_1381 
               (fun (x_8319:int) ->
                  if x_8319 >= 1
                  then
                    k_m21_8277 ()
                  else
                    <|fail|> () k_m21_8277)
           else
             k_m21_8277 ())
    else
      k_m21_8277 ()
  in
  let make_array23_1383 (n_1384:int) (i_1385:int) 
                       (k_make_array23_8362:(int -> X)) =
    k_make_array23_8362 (n_1384 - i_1385)
  in
  let rec array_max23_1386 (x_2875:int) (i_1388:int) 
                          (x_2882:(int -> (int -> X) -> X)) 
                          (m_1390:int) 
                          (k_array_max23_8373:(int -> X)) =
    if i_1388 >= x_2875
    then
      k_array_max23_8373 m_1390
    else
      x_2882
        i_1388 
        (fun (x_8412:int) ->
           let z_1392 (k_array_max23_z_8389:(int -> X)) =
             if x_8412 > m_1390
             then
               k_array_max23_z_8389 x_8412
             else
               k_array_max23_z_8389 m_1390
           in
           z_1392
             (fun (z_8411:int) ->
                array_max23_1386
                  x_2875 (i_1388 + 1) x_2882 z_8411 
                  k_array_max23_8373))
  in
  let m23_1393 (n_1394:int) (i_1395:int) 
              (k_m23_8429:(unit -> X)) =
    if n_1394 > 0 && (i_1395 >= 0 && i_1395 <= 0)
    then
      array_max23_1386
        n_1394 i_1395 (make_array23_1383 n_1394) (-1) 
        (fun (m_8463:int) ->
           if m_8463 >= n_1394
           then
             k_m23_8429 ()
           else
             <|fail|> () k_m23_8429)
    else
      k_m23_8429 ()
  in
  let make_array24_1397 (n_1398:int) (i_1399:int) 
                       (k_make_array24_8475:(int -> X)) =
    k_make_array24_8475 (n_1398 - i_1399)
  in
  let rec array_max24_1400 (x_2940:int) (i_1402:int) 
                          (x_2947:(int -> (int -> X) -> X)) 
                          (m_1404:int) 
                          (k_array_max24_8486:(int -> X)) =
    if i_1402 >= x_2940
    then
      k_array_max24_8486 m_1404
    else
      x_2947
        i_1402 
        (fun (x_8525:int) ->
           let z_1406 (k_array_max24_z_8502:(int -> X)) =
             if x_8525 > m_1404
             then
               k_array_max24_z_8502 x_8525
             else
               k_array_max24_z_8502 m_1404
           in
           z_1406
             (fun (z_8524:int) ->
                array_max24_1400
                  x_2940 (i_1402 + 1) x_2947 z_8524 
                  k_array_max24_8486))
  in
  let m24_1407 (n_1408:int) (i_1409:int) 
              (k_m24_8542:(unit -> X)) =
    if n_1408 > 0 && (i_1409 >= 0 && i_1409 <= 0)
    then
      array_max24_1400
        n_1408 i_1409 (make_array24_1397 n_1408) (-1) 
        (fun (m_8576:int) ->
           if m_8576 <> n_1408
           then
             k_m24_8542 ()
           else
             <|fail|> () k_m24_8542)
    else
      k_m24_8542 ()
  in
  let rec mult25_1411 (n_1412:int) (m_1413:int) 
                     (k_mult25_8588:(int -> X)) =
    if n_1412 <= 0 || m_1413 <= 0
    then
      k_mult25_8588 0
    else
      mult25_1411
        n_1412 (m_1413 - 1) 
        (fun (x_8592:int) -> k_mult25_8588 (n_1412 + x_8592))
  in
  let rec mult26_1417 (n_1418:int) (m_1419:int) 
                     (k_mult26_8660:(int -> X)) =
    if n_1418 <= 0 || m_1419 <= 0
    then
      k_mult26_8660 0
    else
      mult26_1417
        n_1418 (m_1419 - 1) 
        (fun (x_8664:int) -> k_mult26_8660 (n_1418 + x_8664))
  in
  let make_array27_1423 (n_1424:int) (i_1425:int) 
                       (k_make_array27_8721:(int -> X)) =
    let u_3057 (k_make_array27_u_8732:(unit -> X)) =
      if 0 <= i_1425 && i_1425 < n_1424
      then
        k_make_array27_u_8732 ()
      else
        <|fail|> () k_make_array27_u_8732
    in
    u_3057 (fun (():unit) -> k_make_array27_8721 0)
  in
  let update27_1426 (i_1427:int) 
                   (a_1428:(int -> (int -> X) -> X)) 
                   (x_1429:int) (j_1430:int) 
                   (k_update27_8746:(int -> X)) =
    if j_1430 > i_1427 - 1 && j_1430 <= i_1427
    then
      k_update27_8746 x_1429
    else
      a_1428 j_1430 k_update27_8746
  in
  let rec init27_1431 (i_1432:int) (n_1433:int) 
                     (a_1434:(int -> (int -> X) -> X)) 
                     (k_init27_8779:((int -> (int -> X) -> X) ->
                                       X)) =
    if i_1432 >= n_1433
    then
      k_init27_8779 a_1434
    else
      init27_1431
        (i_1432 + 1) n_1433 (update27_1426 i_1432 a_1434 1) 
        k_init27_8779
  in
  let m27_1435 (k_1436:int) (n_1437:int) (i_1438:int) 
              (k_m27_8846:(unit -> X)) =
    if k_1436 >= 0 && k_1436 <= 0
    then
      init27_1431
        k_1436 n_1437 (make_array27_1423 n_1437) 
        (fun (x_8918:(int -> (int -> X) -> X)) ->
           if 0 <= i_1438 && i_1438 < n_1437
           then
             x_8918
               i_1438 
               (fun (x_8888:int) ->
                  if x_8888 = 1
                  then
                    k_m27_8846 ()
                  else
                    <|fail|> () k_m27_8846)
           else
             k_m27_8846 ())
    else
      k_m27_8846 ()
  in
  let rec sum28_1440 (n_1441:int) (m_1442:int) 
                    (k_sum28_8931:(int -> X)) =
    if n_1441 <= 0
    then
      k_sum28_8931 m_1442
    else
      sum28_1440
        (n_1441 - 1) m_1442 
        (fun (x_8935:int) -> k_sum28_8931 (1 + x_8935))
  in
  let rec mult_sum_1443 (n_1444:int) (m_1445:int) 
                       (k_mult_sum_8958:(int -> X)) =
    if n_1444 <= 0
    then
      k_mult_sum_8958 0
    else
      rand_int_cps
        () 
        (fun (x_8961:int) ->
           if x_8961 = 0
           then
             k_mult_sum_8958 m_1445
           else
             mult_sum_1443
               (n_1444 - 1) m_1445 
               (fun (x_8994:int) ->
                  sum28_1440 m_1445 x_8994 k_mult_sum_8958))
  in
  let main_1449 (n_1450:int) (m_1451:int) 
               (k_main_9062:(unit -> X)) =
    let u_3279 (k_main_u_9391:(unit -> X)) =
      if n_1450 = 1
      then
        copy_1199
          m_1451 
          (fun (x_6159:int) ->
             copy_1199
               x_6159 
               (fun (x_6138:int) ->
                  if x_6138 = m_1451
                  then
                    k_main_u_9391 ()
                  else
                    <|fail|> () k_main_u_9391))
      else
        if n_1450 = 2
        then
          m2_1210 m_1451 k_main_u_9391
        else
          if n_1450 = 3
          then
            f3_1213 m_1451 g3_1216 k_main_u_9391
          else
            if n_1450 = 4
            then
              f_1229 m_1451 c4_1220 0 k_main_u_9391
            else
              if n_1450 = 5
              then
                m5_1243 m_1451 k_main_u_9391
              else
                if n_1450 = 6
                then
                  m6_1251 m_1451 k_main_u_9391
                else
                  if n_1450 = 7
                  then
                    zip_1253
                      m_1451 m_1451 
                      (fun (x_6858:int) ->
                         map_1256
                           x_6858 
                           (fun (x_6836:int) ->
                              if x_6836 = m_1451
                              then
                                k_main_u_9391 ()
                              else
                                <|fail|> () k_main_u_9391))
                  else
                    if n_1450 = 9
                    then
                      f9_1265
                        m_1451 m_1451 
                        (fun (x_6906:int) ->
                           f9_1265
                             x_6906 m_1451 
                             (fun (m_6989:int) ->
                                f9_1265
                                  m_1451 m_6989 
                                  (fun (x_6965:int) ->
                                     if x_6965 = m_6989
                                     then
                                       k_main_u_9391 ()
                                     else
                                       <|fail|>
                                         () k_main_u_9391)))
                    else
                      if n_1450 = 11
                      then
                        mult_1285
                          m_1451 m_1451 
                          (fun (x_7183:int) ->
                             if m_1451 <= x_7183
                             then
                               k_main_u_9391 ()
                             else
                               <|fail|> () k_main_u_9391)
                      else
                        if n_1450 = 12
                        then
                          m12_1317 m_1451 k_main_u_9391
                        else
                          if n_1450 = 13
                          then
                            f13_1325
                              m_1451 0 
                              (fun (x_7736:int) ->
                                 g13_1328
                                   m_1451 x_7736 
                                   (fun (x_7713:int) ->
                                      if x_7713 = 0
                                      then
                                        k_main_u_9391 ()
                                      else
                                        <|fail|>
                                          () k_main_u_9391))
                          else
                            if n_1450 = 14
                            then
                              sum_1333
                                m_1451 
                                (fun (x_7783:int) ->
                                   if m_1451 <= x_7783
                                   then
                                     k_main_u_9391 ()
                                   else
                                     <|fail|> () k_main_u_9391)
                            else
                              if n_1450 = 15
                              then
                                mult_1337
                                  m_1451 m_1451 
                                  (fun (x_7842:int) ->
                                     if m_1451 + 1 <= x_7842
                                     then
                                       k_main_u_9391 ()
                                     else
                                       <|fail|>
                                         () k_main_u_9391)
                              else
                                if n_1450 = 16
                                then
                                  repeat_1344
                                    succ_1342 m_1451 0 
                                    (fun (x_7928:int) ->
                                       if x_7928 > m_1451
                                       then
                                         k_main_u_9391 ()
                                       else
                                         <|fail|>
                                           () k_main_u_9391)
                                else
                                  if n_1450 = 17
                                  then
                                    f17_1354
                                      m_1451 0 
                                      (fun (x_8077:int) ->
                                         g17_1357
                                           m_1451 x_8077 
                                           (fun (x_8054:int) ->
                                              if x_8054 = 0
                                              then
                                                k_main_u_9391
                                                  ()
                                              else
                                                <|fail|>
                                                  () 
                                                  k_main_u_9391))
                                  else
                                    if n_1450 = 18
                                    then
                                      sum_1362
                                        m_1451 
                                        (fun (x_8124:int) ->
                                           if
                                             m_1451 + 1 <=
                                             x_8124
                                           then
                                             k_main_u_9391 ()
                                           else
                                             <|fail|>
                                               () k_main_u_9391)
                                    else
                                      if n_1450 = 21
                                      then
                                        m21_1378
                                          m_1451 m_1451 m_1451 
                                          k_main_u_9391
                                      else
                                        if n_1450 = 23
                                        then
                                          m23_1393
                                            m_1451 m_1451 
                                            k_main_u_9391
                                        else
                                          if n_1450 = 24
                                          then
                                            m24_1407
                                              m_1451 m_1451 
                                              k_main_u_9391
                                          else
                                            if n_1450 = 25
                                            then
                                              mult25_1411
                                                m_1451 m_1451 
                                                (fun
                                                    (x_8618:int) ->
                                                   mult25_1411
                                                     m_1451 
                                                     m_1451 
                                                     (fun
                                                         (x_8619:int) ->
                                                        if
                                                          x_8618
                                                          <=
                                                          x_8619
                                                        then
                                                          k_main_u_9391
                                                            ()
                                                        else
                                                          <|fail|>
                                                            () 
                                                            k_main_u_9391))
                                            else
                                              if n_1450 = 26
                                              then
                                                mult26_1417
                                                  m_1451 m_1451 
                                                  (fun
                                                      (x_8691:int) ->
                                                     if
                                                       m_1451 *
                                                       2 <=
                                                       x_8691
                                                     then
                                                       k_main_u_9391
                                                         ()
                                                     else
                                                       <|fail|>
                                                         () 
                                                         k_main_u_9391)
                                              else
                                                if n_1450 = 27
                                                then
                                                  m27_1435
                                                    m_1451 
                                                    m_1451 
                                                    m_1451 
                                                    k_main_u_9391
                                                else
                                                  mult_sum_1443
                                                    m_1451 
                                                    m_1451 
                                                    (fun
                                                        (x_9036:int) ->
                                                       Pervasives.==_3803
                                                         x_9036 
                                                         (m_1451
                                                          *
                                                          m_1451)
                                                         (fun
                                                             (x_9054:
                                                              bool) ->
                                                            if
                                                              x_9054
                                                            then
                                                              k_main_u_9391
                                                                ()
                                                            else
                                                              <|fail|>
                                                                () 
                                                                k_main_u_9391))
    in
    u_3279 (fun (():unit) -> k_main_9062 ())
  in
  let main_3284 (k_main_9402:(unit -> X)) =
    let arg1_3280 (k_main_arg1_9407:(int -> X)) =
      rand_int_cps () k_main_arg1_9407
    in
    arg1_3280
      (fun (arg1_9437:int) ->
         let arg2_3282 (k_main_arg2_9419:(int -> X)) =
           rand_int_cps () k_main_arg2_9419
         in
         arg2_3282
           (fun (arg2_9436:int) ->
              main_1449 arg1_9437 arg2_9436 k_main_9402))
  in
  main_3284 (fun (():unit) -> {end}) # [ACPS])


check_samples.sh: line 3:   328 Killed                  timeout 180 bin/mochi.opt -limit 180 $file
118.337
