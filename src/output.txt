
;;    ***Opening file: ../extras/sample_programs/MoCHI_samples/mc91-e.txt.....[done]***
;;    PARSER: 0.000071s
;;    ***Lexing and Parsing file........[done]***
;;    ***Building initial variables........[done]***
;;    BOUNDED TRANSLATION: 0.000158s
;;    ***Running bounded translation........[done]***

;;    PARSED TERM: (if (n lte 102) then (if ((mc91 (n)) eq 91) then skip else fail) else skip)

;;    SMT-LIB FILE:
(declare-sort Unit)
(declare-datatypes (T1 T2) ((Pair (mk-pair (left T1) (right T2)))))
(define-fun gte ((x Int) (y Int)) Int (if (>= x y) 1 0))
(define-fun lte ((x Int) (y Int)) Int (if (<= x y) 1 0))
(define-fun eq ((x Int) (y Int)) Int (if (= x y) 1 0))
(define-fun and_int ((x Int) (y Int)) Int (if (or (= x 0) (= y 0)) 0 1))
(define-fun or_int ((x Int) (y Int)) Int (if (or (not (= x 0)) (not (= y 0))) 1 0))

(declare-const n Int)
(declare-const _ret_1_ Unit)
(declare-const _ret_2_ Int)
(declare-const _ret_3_ Int)
(declare-const _ret_4_ Int)
(declare-const _ret_5_ Unit)
(declare-const _ret_6_ Unit)
(declare-const _ret_7_ Int)
(declare-const _ret_8_ Int)
(declare-const _ret_9_ Int)
(declare-const _ret_10_ Int)
(declare-const _ret_11_ Int)
(declare-const _ret_12_ Int)
(declare-const _ret_13_ Int)
(declare-const _ret_14_ Int)
(declare-const _ret_15_ Int)
(declare-const _ret_16_ Int)
(declare-const _ret_17_ Int)
(declare-const _ret_18_ Int)
(declare-const _ret_19_ Int)
(declare-const _ret_20_ Int)
(declare-const _ret_21_ Int)
(declare-const _ret_22_ Int)
(declare-const _ret_23_ Int)
(declare-const _ret_24_ Int)
(declare-const _ret_25_ Int)
(declare-const _ret_26_ Int)
(declare-const _ret_27_ Int)
(declare-const _ret_28_ Int)
(declare-const _ret_29_ Int)
(declare-const _ret_30_ Int)
(declare-const _ret_31_ Int)
(declare-const _ret_32_ Int)
(declare-const _ret_33_ Int)
(declare-const _ret_34_ Int)
(declare-const _ret_35_ Int)
(declare-const _ret_36_ Int)
(declare-const _ret_37_ Int)
(declare-const _ret_38_ Int)
(declare-const _ret_39_ Int)
(declare-const _ret_40_ Int)
(declare-const _ret_41_ Int)
(declare-const _ret_42_ Int)
(declare-const _ret_43_ Int)
(declare-const _ret_44_ Int)
(declare-const _ret_45_ Int)
(declare-const _ret_46_ Int)
(declare-const _ret_47_ Int)
(declare-const _ret_48_ Int)
(declare-const _ret_49_ Int)
(declare-const _ret_50_ Int)
(declare-const _ret_51_ Unit)
(declare-const _ret_52_ Unit)
(declare-const skip Unit)
(declare-const nil_unit Unit)
(declare-const fail_unit Unit)
(declare-const nil_int Int)
(declare-const fail_int Int)
;;    GENERATING TYPE DECLARATIONS: 0.000002s

(assert (and (not (= n fail_int)) (not (= n nil_int)))
)

(assert (not (= fail_int nil_int)))
(assert (not (= fail_unit nil_unit)))
(assert (not (= "fail_meth" "nil_meth")))

;;    GENERATING ASSERTIONS FOR COMPLEX TYPES: 0.000001s

(assert (and (and (and (=> (= _ret_2_ fail_int) (= _ret_1_ fail_unit)) (=> (= _ret_2_ nil_int) (= _ret_1_ nil_unit)))
 (or (or (= _ret_2_ fail_int) (= _ret_2_ nil_int)) (and (=> (= _ret_2_ 0) (= _ret_1_ _ret_5_)) (=> (not (= _ret_2_ 0)) (and (and (=> (= _ret_6_ fail_unit) (= _ret_1_ fail_unit)) (=> (= _ret_6_ nil_unit) (= _ret_1_ nil_unit)))
 (or (or (= _ret_6_ fail_unit) (= _ret_6_ nil_unit)) (= _ret_1_ _ret_6_)))
))
))
 (and (and (and (=> (= _ret_7_ fail_int) (= _ret_6_ fail_unit)) (=> (= _ret_7_ nil_int) (= _ret_6_ nil_unit)))
 (or (or (= _ret_7_ fail_int) (= _ret_7_ nil_int)) (and (=> (= _ret_7_ 0) (and (=> (= _ret_51_ fail_unit) (= _ret_6_ fail_unit)) (or (= _ret_51_ fail_unit) (= _ret_6_ _ret_51_)))
) (=> (not (= _ret_7_ 0)) (= _ret_6_ _ret_52_)))
))
 (and (and (and (= _ret_52_ skip) (not (= _ret_52_ fail_unit)))
 (not (= _ret_52_ nil_unit)))
 (and (= _ret_51_ fail_unit) (and (and (and (=> (= _ret_8_ fail_int) (= _ret_7_ fail_int)) (=> (= _ret_8_ nil_int) (= _ret_7_ nil_int)))
 (or (or (= _ret_8_ fail_int) (= _ret_8_ nil_int)) (and (and (= _ret_7_ (eq _ret_8_ _ret_50_)) (not (= _ret_7_ fail_int)))
 (not (= _ret_7_ nil_int)))
))
 (and (and (and (= _ret_50_ 91) (not (= _ret_50_ fail_int)))
 (not (= _ret_50_ nil_int)))
 (and (and (and (=> (= n fail_int) (= _ret_8_ fail_int)) (=> (= n nil_int) (= _ret_8_ nil_int)))
 (or (or (= n fail_int) (= n nil_int)) (and (and (=> (= _ret_10_ fail_int) (= _ret_8_ fail_int)) (=> (= _ret_10_ nil_int) (= _ret_8_ nil_int)))
 (or (or (= _ret_10_ fail_int) (= _ret_10_ nil_int)) (= _ret_8_ _ret_10_)))
))
 (and (and (and (=> (= _ret_11_ fail_int) (= _ret_10_ fail_int)) (=> (= _ret_11_ nil_int) (= _ret_10_ nil_int)))
 (or (or (= _ret_11_ fail_int) (= _ret_11_ nil_int)) (and (=> (= _ret_11_ 0) (and (and (=> (= _ret_14_ fail_int) (= _ret_10_ fail_int)) (=> (= _ret_14_ nil_int) (= _ret_10_ nil_int)))
 (or (or (= _ret_14_ fail_int) (= _ret_14_ nil_int)) (= _ret_10_ _ret_14_)))
) (=> (not (= _ret_11_ 0)) (and (and (=> (= _ret_47_ fail_int) (= _ret_10_ fail_int)) (=> (= _ret_47_ nil_int) (= _ret_10_ nil_int)))
 (or (or (= _ret_47_ fail_int) (= _ret_47_ nil_int)) (= _ret_10_ _ret_47_)))
))
))
 (and (and (and (=> (= n fail_int) (= _ret_47_ fail_int)) (=> (= n nil_int) (= _ret_47_ nil_int)))
 (or (or (= n fail_int) (= n nil_int)) (and (and (= _ret_47_ (+ n _ret_49_)) (not (= _ret_47_ fail_int)))
 (not (= _ret_47_ nil_int)))
))
 (and (and (and (= _ret_49_ -10) (not (= _ret_49_ fail_int)))
 (not (= _ret_49_ nil_int)))
 (and (and (and (=> (= _ret_15_ fail_int) (= _ret_14_ fail_int)) (=> (= _ret_15_ nil_int) (= _ret_14_ nil_int)))
 (or (or (= _ret_15_ fail_int) (= _ret_15_ nil_int)) (and (and (=> (= _ret_33_ fail_int) (= _ret_14_ fail_int)) (=> (= _ret_33_ nil_int) (= _ret_14_ nil_int)))
 (or (or (= _ret_33_ fail_int) (= _ret_33_ nil_int)) (= _ret_14_ _ret_33_)))
))
 (and (and (and (=> (= _ret_34_ fail_int) (= _ret_33_ fail_int)) (=> (= _ret_34_ nil_int) (= _ret_33_ nil_int)))
 (or (or (= _ret_34_ fail_int) (= _ret_34_ nil_int)) (and (=> (= _ret_34_ 0) (and (and (=> (= _ret_37_ fail_int) (= _ret_33_ fail_int)) (=> (= _ret_37_ nil_int) (= _ret_33_ nil_int)))
 (or (or (= _ret_37_ fail_int) (= _ret_37_ nil_int)) (= _ret_33_ _ret_37_)))
) (=> (not (= _ret_34_ 0)) (and (and (=> (= _ret_44_ fail_int) (= _ret_33_ fail_int)) (=> (= _ret_44_ nil_int) (= _ret_33_ nil_int)))
 (or (or (= _ret_44_ fail_int) (= _ret_44_ nil_int)) (= _ret_33_ _ret_44_)))
))
))
 (and (and (and (=> (= _ret_15_ fail_int) (= _ret_44_ fail_int)) (=> (= _ret_15_ nil_int) (= _ret_44_ nil_int)))
 (or (or (= _ret_15_ fail_int) (= _ret_15_ nil_int)) (and (and (= _ret_44_ (+ _ret_15_ _ret_46_)) (not (= _ret_44_ fail_int)))
 (not (= _ret_44_ nil_int)))
))
 (and (and (and (= _ret_46_ -10) (not (= _ret_46_ fail_int)))
 (not (= _ret_46_ nil_int)))
 (and (and (and (=> (= _ret_38_ fail_int) (= _ret_37_ fail_int)) (=> (= _ret_38_ nil_int) (= _ret_37_ nil_int)))
 (or (or (= _ret_38_ fail_int) (= _ret_38_ nil_int)) (and (=> (= _ret_43_ nil_int) (= _ret_37_ nil_int)) (or (= _ret_43_ nil_int) (= _ret_37_ _ret_43_)))
))
 (and (= _ret_43_ nil_int) (and (and (and (=> (= _ret_39_ fail_int) (= _ret_38_ fail_int)) (=> (= _ret_39_ nil_int) (= _ret_38_ nil_int)))
 (or (or (= _ret_39_ fail_int) (= _ret_39_ nil_int)) (and (=> (= _ret_42_ nil_int) (= _ret_38_ nil_int)) (or (= _ret_42_ nil_int) (= _ret_38_ _ret_42_)))
))
 (and (= _ret_42_ nil_int) (and (and (and (=> (= _ret_15_ fail_int) (= _ret_39_ fail_int)) (=> (= _ret_15_ nil_int) (= _ret_39_ nil_int)))
 (or (or (= _ret_15_ fail_int) (= _ret_15_ nil_int)) (and (and (= _ret_39_ (+ _ret_15_ _ret_41_)) (not (= _ret_39_ fail_int)))
 (not (= _ret_39_ nil_int)))
))
 (and (and (and (= _ret_41_ 11) (not (= _ret_41_ fail_int)))
 (not (= _ret_41_ nil_int)))
 (and (and (and (=> (= _ret_15_ fail_int) (= _ret_34_ fail_int)) (=> (= _ret_15_ nil_int) (= _ret_34_ nil_int)))
 (or (or (= _ret_15_ fail_int) (= _ret_15_ nil_int)) (and (and (= _ret_34_ (gte _ret_15_ _ret_36_)) (not (= _ret_34_ fail_int)))
 (not (= _ret_34_ nil_int)))
))
 (and (and (and (= _ret_36_ 101) (not (= _ret_36_ fail_int)))
 (not (= _ret_36_ nil_int)))
 (and (and (and (=> (= _ret_16_ fail_int) (= _ret_15_ fail_int)) (=> (= _ret_16_ nil_int) (= _ret_15_ nil_int)))
 (or (or (= _ret_16_ fail_int) (= _ret_16_ nil_int)) (and (and (=> (= _ret_19_ fail_int) (= _ret_15_ fail_int)) (=> (= _ret_19_ nil_int) (= _ret_15_ nil_int)))
 (or (or (= _ret_19_ fail_int) (= _ret_19_ nil_int)) (= _ret_15_ _ret_19_)))
))
 (and (and (and (=> (= _ret_20_ fail_int) (= _ret_19_ fail_int)) (=> (= _ret_20_ nil_int) (= _ret_19_ nil_int)))
 (or (or (= _ret_20_ fail_int) (= _ret_20_ nil_int)) (and (=> (= _ret_20_ 0) (and (and (=> (= _ret_23_ fail_int) (= _ret_19_ fail_int)) (=> (= _ret_23_ nil_int) (= _ret_19_ nil_int)))
 (or (or (= _ret_23_ fail_int) (= _ret_23_ nil_int)) (= _ret_19_ _ret_23_)))
) (=> (not (= _ret_20_ 0)) (and (and (=> (= _ret_30_ fail_int) (= _ret_19_ fail_int)) (=> (= _ret_30_ nil_int) (= _ret_19_ nil_int)))
 (or (or (= _ret_30_ fail_int) (= _ret_30_ nil_int)) (= _ret_19_ _ret_30_)))
))
))
 (and (and (and (=> (= _ret_16_ fail_int) (= _ret_30_ fail_int)) (=> (= _ret_16_ nil_int) (= _ret_30_ nil_int)))
 (or (or (= _ret_16_ fail_int) (= _ret_16_ nil_int)) (and (and (= _ret_30_ (+ _ret_16_ _ret_32_)) (not (= _ret_30_ fail_int)))
 (not (= _ret_30_ nil_int)))
))
 (and (and (and (= _ret_32_ -10) (not (= _ret_32_ fail_int)))
 (not (= _ret_32_ nil_int)))
 (and (and (and (=> (= _ret_24_ fail_int) (= _ret_23_ fail_int)) (=> (= _ret_24_ nil_int) (= _ret_23_ nil_int)))
 (or (or (= _ret_24_ fail_int) (= _ret_24_ nil_int)) (and (=> (= _ret_29_ nil_int) (= _ret_23_ nil_int)) (or (= _ret_29_ nil_int) (= _ret_23_ _ret_29_)))
))
 (and (= _ret_29_ nil_int) (and (and (and (=> (= _ret_25_ fail_int) (= _ret_24_ fail_int)) (=> (= _ret_25_ nil_int) (= _ret_24_ nil_int)))
 (or (or (= _ret_25_ fail_int) (= _ret_25_ nil_int)) (and (=> (= _ret_28_ nil_int) (= _ret_24_ nil_int)) (or (= _ret_28_ nil_int) (= _ret_24_ _ret_28_)))
))
 (and (= _ret_28_ nil_int) (and (and (and (=> (= _ret_16_ fail_int) (= _ret_25_ fail_int)) (=> (= _ret_16_ nil_int) (= _ret_25_ nil_int)))
 (or (or (= _ret_16_ fail_int) (= _ret_16_ nil_int)) (and (and (= _ret_25_ (+ _ret_16_ _ret_27_)) (not (= _ret_25_ fail_int)))
 (not (= _ret_25_ nil_int)))
))
 (and (and (and (= _ret_27_ 11) (not (= _ret_27_ fail_int)))
 (not (= _ret_27_ nil_int)))
 (and (and (and (=> (= _ret_16_ fail_int) (= _ret_20_ fail_int)) (=> (= _ret_16_ nil_int) (= _ret_20_ nil_int)))
 (or (or (= _ret_16_ fail_int) (= _ret_16_ nil_int)) (and (and (= _ret_20_ (gte _ret_16_ _ret_22_)) (not (= _ret_20_ fail_int)))
 (not (= _ret_20_ nil_int)))
))
 (and (and (and (= _ret_22_ 101) (not (= _ret_22_ fail_int)))
 (not (= _ret_22_ nil_int)))
 (and (and (and (=> (= n fail_int) (= _ret_16_ fail_int)) (=> (= n nil_int) (= _ret_16_ nil_int)))
 (or (or (= n fail_int) (= n nil_int)) (and (and (= _ret_16_ (+ n _ret_18_)) (not (= _ret_16_ fail_int)))
 (not (= _ret_16_ nil_int)))
))
 (and (and (and (= _ret_18_ 11) (not (= _ret_18_ fail_int)))
 (not (= _ret_18_ nil_int)))
 (and (and (and (=> (= n fail_int) (= _ret_11_ fail_int)) (=> (= n nil_int) (= _ret_11_ nil_int)))
 (or (or (= n fail_int) (= n nil_int)) (and (and (= _ret_11_ (gte n _ret_13_)) (not (= _ret_11_ fail_int)))
 (not (= _ret_11_ nil_int)))
))
 (and (and (and (= _ret_13_ 101) (not (= _ret_13_ fail_int)))
 (not (= _ret_13_ nil_int)))
 (and (and (and (= _ret_5_ skip) (not (= _ret_5_ fail_unit)))
 (not (= _ret_5_ nil_unit)))
 (and (and (and (=> (= n fail_int) (= _ret_2_ fail_int)) (=> (= n nil_int) (= _ret_2_ nil_int)))
 (or (or (= n fail_int) (= n nil_int)) (and (and (= _ret_2_ (lte n _ret_4_)) (not (= _ret_2_ fail_int)))
 (not (= _ret_2_ nil_int)))
))
 (and (and (= _ret_4_ 102) (not (= _ret_4_ fail_int)))
 (not (= _ret_4_ nil_int)))
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
;;    GENERATING PROGRAM FORMULA: 0.000569s
)

(assert (= _ret_1_ fail_unit))

(check-sat)
(get-model)

;;    TOTAL EXECUTION TIME: 0.001378s
