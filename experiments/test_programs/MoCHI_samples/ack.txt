(*multiple arg functions become pairs: we don't have M M, and currying with side-effects is a lie*)
Methods:
ackermann (p : Int * Int) :(Int) =
    let (m:Int) = (fst:Int*Int) p in
    let (n:Int) = (snd:Int*Int) p in
    if m
    then
      if n
      then ackermann (m + -1,(ackermann (m,n + -1)))
      else ackermann (m + -1,1)
    else n+1;

Main:(Unit):
  let (m:Int) = 1 in
  let (n:Int) = 1 in
  if m + n
  then if (ackermann (m,n)) + (n*-1)
       then skip
       else fail
  else skip
